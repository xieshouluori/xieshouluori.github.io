<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>携手落日</title>
  <subtitle>我思故我在</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-09-11T07:06:25.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>妞妞</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Immutable 在React 中实践</title>
    <link href="http://yoursite.com/2017/09/11/immutable/"/>
    <id>http://yoursite.com/2017/09/11/immutable/</id>
    <published>2017-09-10T16:00:00.000Z</published>
    <updated>2017-09-11T07:06:25.000Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;出现的原因&lt;/p&gt;
&lt;p&gt;JavaScript 中的对象一般是可变的（Mutable）&lt;/p&gt;
&lt;p&gt;​    因为使用了引用赋值，新的对象简单的引用了原始对象，改变新的对象将影响到原始对象。&lt;/p&gt;
&lt;p&gt;​    如 &lt;code&gt;foo={a: 1}; bar=foo; bar.a=2&lt;/code&gt; 你会发现此时 &lt;code&gt;foo.a&lt;/code&gt; 也被改成了 &lt;code&gt;2&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;优点：可以节约内存，&lt;/p&gt;
&lt;p&gt;缺点:当应用复杂后，这就造成了非常大的隐患，Mutable 带来的优点变得得不偿失。&lt;/p&gt;
&lt;p&gt;一般的解决办法：使用 shallowCopy（浅拷贝）或 deepCopy（深拷贝）来避免被修改，但这样做造成了 CPU 和内存的浪费。&lt;/p&gt;
&lt;p&gt;2.什么是 Immutable Data&lt;/p&gt;
&lt;p&gt;（1）Immutable Data 就是一旦创建，就不能再被更改的数据。对 Immutable 对象的任何修改或添加删除操作都会返回一个新的 Immutable 对象。&lt;/p&gt;
&lt;p&gt;（2）Immutable 实现的原理是&lt;/p&gt;
&lt;p&gt;​    Persistent Data Structure**（持久化数据结构），也就是使用旧数据创建新数据时，要保证旧数据同时可用且不变。&lt;/p&gt;
&lt;p&gt;​    同时为了避免 deepCopy 把所有节点都复制一遍带来的性能损耗，Immutable 使用了 &lt;strong&gt;Structural Sharing&lt;/strong&gt;（结构共享），即如果对象树中一个节点发生变化，只修改这个节点和受它影响的父节点，其它节点则进行共享。请看下面动画：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.alicdn.com/tps/i2/TB1zzi_KXXXXXctXFXXbrb8OVXX-613-575.gif&quot; alt=&quot;Immutable 原理动画&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;目前流行的 Immutable 库有两个：&lt;/p&gt;
&lt;h3 id=&quot;immutable-js&quot;&gt;&lt;a href=&quot;#immutable-js&quot; class=&quot;headerlink&quot; title=&quot;immutable.js&quot;&gt;&lt;/a&gt;immutable.js&lt;/h3&gt;&lt;p&gt;Facebook 工程师 Lee Byron 花费 3 年时间打造，与 React 同期出现，但没有被默认放到 React 工具集里（React 提供了简化的 Helper）。它内部实现了一套完整的 Persistent Data Structure，还有很多易用的数据类型。像 &lt;code&gt;Collection&lt;/code&gt;、&lt;code&gt;List&lt;/code&gt;、&lt;code&gt;Map&lt;/code&gt;、&lt;code&gt;Set&lt;/code&gt;、&lt;code&gt;Record&lt;/code&gt;、&lt;code&gt;Seq&lt;/code&gt;。有非常全面的&lt;code&gt;map&lt;/code&gt;、&lt;code&gt;filter&lt;/code&gt;、&lt;code&gt;groupBy&lt;/code&gt;、&lt;code&gt;reduce``find&lt;/code&gt;函数式操作方法。同时 API 也尽量与 Object 或 Array 类似。&lt;/p&gt;
&lt;p&gt;其中有 3 种最重要的数据结构说明一下：（Java 程序员应该最熟悉了）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Map：键值对集合，对应于 Object，ES6 也有专门的 Map 对象&lt;/li&gt;
&lt;li&gt;List：有序可重复的列表，对应于 Array&lt;/li&gt;
&lt;li&gt;Set：无序且不可重复的列表&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;seamless-immutable&quot;&gt;&lt;a href=&quot;#seamless-immutable&quot; class=&quot;headerlink&quot; title=&quot;seamless-immutable&quot;&gt;&lt;/a&gt;seamless-immutable&lt;/h3&gt;&lt;p&gt;与 Immutable.js 学院派的风格不同，seamless-immutable 并没有实现完整的 Persistent Data Structure，而是使用 &lt;code&gt;Object.defineProperty&lt;/code&gt;（因此只能在 IE9 及以上使用）扩展了 JavaScript 的 Array 和 Object 对象来实现，只支持 Array 和 Object 两种数据类型，API 基于与 Array 和 Object 操持不变。代码库非常小，压缩后下载只有 2K。而 Immutable.js 压缩后下载有 16K。&lt;/p&gt;
&lt;p&gt;下面上代码来感受一下两者的不同：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;// 原来的写法&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;let foo = &amp;#123;a: &amp;#123;b: 1&amp;#125;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;let bar = foo;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;bar.a.b = 2;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;console.log(foo.a.b);  // 打印 2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;console.log(foo === bar);  //  打印 true&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;// 使用 immutable.js 后&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;import Immutable from &amp;apos;immutable&amp;apos;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;foo = Immutable.fromJS(&amp;#123;a: &amp;#123;b: 1&amp;#125;&amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;bar = foo.setIn([&amp;apos;a&amp;apos;, &amp;apos;b&amp;apos;], 2);   // 使用 setIn 赋值&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;console.log(foo.getIn([&amp;apos;a&amp;apos;, &amp;apos;b&amp;apos;]));  // 使用 getIn 取值，打印 1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;console.log(foo === bar);  //  打印 false&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;// 使用  seamless-immutable.js 后&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;import SImmutable from &amp;apos;seamless-immutable&amp;apos;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;foo = SImmutable(&amp;#123;a: &amp;#123;b: 1&amp;#125;&amp;#125;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;bar = foo.merge(&amp;#123;a: &amp;#123; b: 2&amp;#125;&amp;#125;)   // 使用 merge 赋值&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;console.log(foo.a.b);  // 像原生 Object 一样取值，打印 1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;console.log(foo === bar);  //  打印 false&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Immutable-优点&quot;&gt;&lt;a href=&quot;#Immutable-优点&quot; class=&quot;headerlink&quot; title=&quot;Immutable 优点&quot;&gt;&lt;/a&gt;Immutable 优点&lt;/h2&gt;&lt;h3 id=&quot;1-Immutable-降低了-Mutable-带来的复杂度&quot;&gt;&lt;a href=&quot;#1-Immutable-降低了-Mutable-带来的复杂度&quot; class=&quot;headerlink&quot; title=&quot;1. Immutable 降低了 Mutable 带来的复杂度&quot;&gt;&lt;/a&gt;1. Immutable 降低了 Mutable 带来的复杂度&lt;/h3&gt;&lt;p&gt;可变（Mutable）数据耦合了 Time 和 Value 的概念，造成了数据很难被回溯。&lt;/p&gt;
&lt;p&gt;比如下面一段代码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;function touchAndLog(touchFn) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  let data = &amp;#123; key: &amp;apos;value&amp;apos; &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  touchFn(data);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  console.log(data.key); // 猜猜会打印什么？&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在不查看 &lt;code&gt;touchFn&lt;/code&gt; 的代码的情况下，因为不确定它对 &lt;code&gt;data&lt;/code&gt; 做了什么，你是不可能知道会打印什么（这不是废话吗）。但如果 &lt;code&gt;data&lt;/code&gt; 是 Immutable 的呢，你可以很肯定的知道打印的是 &lt;code&gt;value&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&quot;2-节省内存&quot;&gt;&lt;a href=&quot;#2-节省内存&quot; class=&quot;headerlink&quot; title=&quot;2. 节省内存&quot;&gt;&lt;/a&gt;2. 节省内存&lt;/h3&gt;&lt;p&gt;Immutable.js 使用了 Structure Sharing 会尽量复用内存，甚至以前使用的对象也可以再次被复用。没有被引用的对象会被垃圾回收。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;import &amp;#123; Map&amp;#125; from &amp;apos;immutable&amp;apos;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;let a = Map(&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  select: &amp;apos;users&amp;apos;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  filter: Map(&amp;#123; name: &amp;apos;Cam&amp;apos; &amp;#125;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;let b = a.set(&amp;apos;select&amp;apos;, &amp;apos;people&amp;apos;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;a === b; // false&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;a.get(&amp;apos;filter&amp;apos;) === b.get(&amp;apos;filter&amp;apos;); // true&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面 a 和 b 共享了没有变化的 &lt;code&gt;filter&lt;/code&gt; 节点。&lt;/p&gt;
&lt;h3 id=&quot;3-Undo-Redo，Copy-Paste，甚至时间旅行这些功能做起来小菜一碟&quot;&gt;&lt;a href=&quot;#3-Undo-Redo，Copy-Paste，甚至时间旅行这些功能做起来小菜一碟&quot; class=&quot;headerlink&quot; title=&quot;3. Undo/Redo，Copy/Paste，甚至时间旅行这些功能做起来小菜一碟&quot;&gt;&lt;/a&gt;3. Undo/Redo，Copy/Paste，甚至时间旅行这些功能做起来小菜一碟&lt;/h3&gt;&lt;p&gt;因为每次数据都是不一样的，只要把这些数据放到一个数组里储存起来，想回退到哪里就拿出对应数据即可，很容易开发出撤销重做这种功能。&lt;/p&gt;
&lt;p&gt;后面我会提供 Flux 做 Undo 的示例。&lt;/p&gt;
&lt;h3 id=&quot;4-并发安全&quot;&gt;&lt;a href=&quot;#4-并发安全&quot; class=&quot;headerlink&quot; title=&quot;4. 并发安全&quot;&gt;&lt;/a&gt;4. 并发安全&lt;/h3&gt;&lt;p&gt;传统的并发非常难做，因为要处理各种数据不一致问题，因此『聪明人』发明了各种锁来解决。但使用了 Immutable 之后，数据天生是不可变的，&lt;strong&gt;并发锁就不需要了&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;然而现在并没什么卵用，因为 JavaScript 还是单线程运行的啊。但未来可能会加入，提前解决未来的问题不也挺好吗？&lt;/p&gt;
&lt;h3 id=&quot;5-拥抱函数式编程&quot;&gt;&lt;a href=&quot;#5-拥抱函数式编程&quot; class=&quot;headerlink&quot; title=&quot;5. 拥抱函数式编程&quot;&gt;&lt;/a&gt;5. 拥抱函数式编程&lt;/h3&gt;&lt;p&gt;Immutable 本身就是函数式编程中的概念，纯函数式编程比面向对象更适用于前端开发。因为只要输入一致，输出必然一致，这样开发的组件更易于调试和组装。&lt;/p&gt;
&lt;p&gt;像 ClojureScript，Elm 等函数式编程语言中的数据类型天生都是 Immutable 的，这也是为什么 ClojureScript 基于 React 的框架 — Om 性能比 React 还要好的原因。&lt;/p&gt;
&lt;h2 id=&quot;Immutable-缺点&quot;&gt;&lt;a href=&quot;#Immutable-缺点&quot; class=&quot;headerlink&quot; title=&quot;Immutable 缺点&quot;&gt;&lt;/a&gt;Immutable 缺点&lt;/h2&gt;&lt;h3 id=&quot;1-需要学习新的-API&quot;&gt;&lt;a href=&quot;#1-需要学习新的-API&quot; class=&quot;headerlink&quot; title=&quot;1. 需要学习新的 API&quot;&gt;&lt;/a&gt;1. 需要学习新的 API&lt;/h3&gt;&lt;p&gt;No Comments&lt;/p&gt;
&lt;h3 id=&quot;2-增加了资源文件大小&quot;&gt;&lt;a href=&quot;#2-增加了资源文件大小&quot; class=&quot;headerlink&quot; title=&quot;2. 增加了资源文件大小&quot;&gt;&lt;/a&gt;2. 增加了资源文件大小&lt;/h3&gt;&lt;p&gt;No Comments&lt;/p&gt;
&lt;h3 id=&quot;3-容易与原生对象混淆&quot;&gt;&lt;a href=&quot;#3-容易与原生对象混淆&quot; class=&quot;headerlink&quot; title=&quot;3. 容易与原生对象混淆&quot;&gt;&lt;/a&gt;3. 容易与原生对象混淆&lt;/h3&gt;&lt;p&gt;这点是我们使用 Immutable.js 过程中遇到最大的问题。写代码要做思维上的转变。&lt;/p&gt;
&lt;p&gt;虽然 Immutable.js 尽量尝试把 API 设计的原生对象类似，有的时候还是很难区别到底是 Immutable 对象还是原生对象，容易混淆操作。&lt;/p&gt;
&lt;p&gt;Immutable 中的 Map 和 List 虽对应原生 Object 和 Array，但操作非常不同，比如你要用 &lt;code&gt;map.get(&amp;#39;key&amp;#39;)&lt;/code&gt; 而不是 &lt;code&gt;map.key&lt;/code&gt;，&lt;code&gt;array.get(0)&lt;/code&gt; 而不是 &lt;code&gt;array[0]&lt;/code&gt;。另外 Immutable 每次修改都会返回新对象，也很容易忘记赋值。&lt;/p&gt;
&lt;p&gt;当使用外部库的时候，一般需要使用原生对象，也很容易忘记转换。&lt;/p&gt;
&lt;p&gt;下面给出一些办法来避免类似问题发生：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用 Flow 或 TypeScript 这类有静态类型检查的工具&lt;/li&gt;
&lt;li&gt;约定变量命名规则：如所有 Immutable 类型对象以 &lt;code&gt;$$&lt;/code&gt; 开头。&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;Immutable.fromJS&lt;/code&gt; 而不是 &lt;code&gt;Immutable.Map&lt;/code&gt; 或 &lt;code&gt;Immutable.List&lt;/code&gt; 来创建对象，这样可以避免 Immutable 和原生对象间的混用。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;更多认识&quot;&gt;&lt;a href=&quot;#更多认识&quot; class=&quot;headerlink&quot; title=&quot;更多认识&quot;&gt;&lt;/a&gt;更多认识&lt;/h2&gt;&lt;h3 id=&quot;Immutable-is&quot;&gt;&lt;a href=&quot;#Immutable-is&quot; class=&quot;headerlink&quot; title=&quot;Immutable.is&quot;&gt;&lt;/a&gt;&lt;code&gt;Immutable.is&lt;/code&gt;&lt;/h3&gt;&lt;p&gt;两个 immutable 对象可以使用 &lt;code&gt;===&lt;/code&gt; 来比较，这样是直接比较内存地址，性能最好。但即使两个对象的值是一样的，也会返回 &lt;code&gt;false&lt;/code&gt;：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;let map1 = Immutable.Map(&amp;#123;a:1, b:1, c:1&amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;let map2 = Immutable.Map(&amp;#123;a:1, b:1, c:1&amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;map1 === map2;             // false&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;为了直接比较对象的值，immutable.js 提供了 &lt;code&gt;Immutable.is&lt;/code&gt; 来做『值比较』，结果如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Immutable.is(map1, map2);  // true&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;Immutable.is&lt;/code&gt; 比较的是两个对象的 &lt;code&gt;hashCode&lt;/code&gt; 或 &lt;code&gt;valueOf&lt;/code&gt;（对于 JavaScript 对象）。由于 immutable 内部使用了 Trie 数据结构来存储，只要两个对象的 &lt;code&gt;hashCode&lt;/code&gt; 相等，值就是一样的。这样的算法避免了深度遍历比较，性能非常好。&lt;/p&gt;
&lt;p&gt;后面会使用 &lt;code&gt;Immutable.is&lt;/code&gt; 来减少 React 重复渲染，提高性能。&lt;/p&gt;
&lt;p&gt;另外，还有 &lt;a href=&quot;https://github.com/swannodette/mori&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mori&lt;/a&gt;、&lt;a href=&quot;https://github.com/mquan/cortex&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;cortex&lt;/a&gt; 等，因为类似就不再介绍。&lt;/p&gt;
&lt;h3 id=&quot;与-Object-freeze、const-区别&quot;&gt;&lt;a href=&quot;#与-Object-freeze、const-区别&quot; class=&quot;headerlink&quot; title=&quot;与 Object.freeze、const 区别&quot;&gt;&lt;/a&gt;与 Object.freeze、const 区别&lt;/h3&gt;&lt;p&gt;ES6 中新加入的 &lt;code&gt;Object.freeze&lt;/code&gt; 和 &lt;code&gt;const&lt;/code&gt; 都可以达到防止对象被篡改的功能，但它们是 shallowCopy 的。对象层级一深就要特殊处理了。&lt;/p&gt;
&lt;h3 id=&quot;Cursor-的概念&quot;&gt;&lt;a href=&quot;#Cursor-的概念&quot; class=&quot;headerlink&quot; title=&quot;Cursor 的概念&quot;&gt;&lt;/a&gt;Cursor 的概念&lt;/h3&gt;&lt;p&gt;这个 Cursor 和数据库中的游标是完全不同的概念。&lt;/p&gt;
&lt;p&gt;由于 Immutable 数据一般嵌套非常深，为了便于访问深层数据，Cursor 提供了可以直接访问这个深层数据的引用。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;import Immutable from &amp;apos;immutable&amp;apos;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;import Cursor from &amp;apos;immutable/contrib/cursor&amp;apos;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;let data = Immutable.fromJS(&amp;#123; a: &amp;#123; b: &amp;#123; c: 1 &amp;#125; &amp;#125; &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;// 让 cursor 指向 &amp;#123; c: 1 &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;let cursor = Cursor.from(data, [&amp;apos;a&amp;apos;, &amp;apos;b&amp;apos;], newData =&amp;gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  // 当 cursor 或其子 cursor 执行 update 时调用&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  console.log(newData);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cursor.get(&amp;apos;c&amp;apos;); // 1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cursor = cursor.update(&amp;apos;c&amp;apos;, x =&amp;gt; x + 1);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cursor.get(&amp;apos;c&amp;apos;); // 2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;实践&quot;&gt;&lt;a href=&quot;#实践&quot; class=&quot;headerlink&quot; title=&quot;实践&quot;&gt;&lt;/a&gt;实践&lt;/h2&gt;&lt;h3 id=&quot;与-React-搭配使用，Pure-Render&quot;&gt;&lt;a href=&quot;#与-React-搭配使用，Pure-Render&quot; class=&quot;headerlink&quot; title=&quot;与 React 搭配使用，Pure Render&quot;&gt;&lt;/a&gt;与 React 搭配使用，Pure Render&lt;/h3&gt;&lt;p&gt;熟悉 React 的都知道，React 做性能优化时有一个避免重复渲染的大招，就是使用 &lt;code&gt;shouldComponentUpdate()&lt;/code&gt;，但它默认返回 &lt;code&gt;true&lt;/code&gt;，即始终会执行 &lt;code&gt;render()&lt;/code&gt; 方法，然后做 Virtual DOM 比较，并得出是否需要做真实 DOM 更新，这里往往会带来很多无必要的渲染并成为性能瓶颈。&lt;/p&gt;
&lt;p&gt;当然我们也可以在 &lt;code&gt;shouldComponentUpdate()&lt;/code&gt; 中使用使用 deepCopy 和 deepCompare 来避免无必要的 &lt;code&gt;render()&lt;/code&gt;，但 &lt;strong&gt;deepCopy 和 deepCompare 一般都是非常耗性能的&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Immutable 则提供了简洁高效的判断数据是否变化的方法&lt;/strong&gt;，只需 &lt;code&gt;===&lt;/code&gt; 和 &lt;code&gt;is&lt;/code&gt; 比较就能知道是否需要执行 &lt;code&gt;render()&lt;/code&gt;，而这个&lt;strong&gt;操作几乎 0 成本&lt;/strong&gt;，所以可以极大提高性能。修改后的 &lt;code&gt;shouldComponentUpdate&lt;/code&gt; 是这样的：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;import &amp;#123; is &amp;#125; from &amp;apos;immutable&amp;apos;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;shouldComponentUpdate: (nextProps, nextState) =&amp;gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  return !(this.props === nextProps || is(this.props, nextProps)) ||&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         !(this.state === nextState || is(this.state, nextState));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用 Immutable 后，如下图，当红色节点的 state 变化后，不会再渲染树中的所有节点，而是只渲染图中绿色的部分：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.alicdn.com/tps/i3/TB1VinpKXXXXXXAXpXXZ_OdNFXX-715-324.png&quot; alt=&quot;react reconciliation&quot;&gt;&lt;/p&gt;
&lt;p&gt;你也可以借助 &lt;code&gt;React.addons.PureRenderMixin&lt;/code&gt; 或支持 class 语法的 &lt;a href=&quot;https://www.w3ctech.com/topic/felixgirault/pure-render-decorator%20%C2%B7%20GitHub&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;pure-render-decorator&lt;/a&gt; 来实现。&lt;/p&gt;
&lt;h4 id=&quot;setState-的一个技巧&quot;&gt;&lt;a href=&quot;#setState-的一个技巧&quot; class=&quot;headerlink&quot; title=&quot;setState 的一个技巧&quot;&gt;&lt;/a&gt;setState 的一个技巧&lt;/h4&gt;&lt;p&gt;React 建议把 &lt;code&gt;this.state&lt;/code&gt; 当作 Immutable 的，因此修改前需要做一个 deepCopy，显得麻烦：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;import &amp;apos;_&amp;apos; from &amp;apos;lodash&amp;apos;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;const Component = React.createClass(&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  getInitialState() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    return &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      data: &amp;#123; times: 0 &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  handleAdd() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    let data = _.cloneDeep(this.state.data);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    data.times = data.times + 1;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    this.setState(&amp;#123; data: data &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    // 如果上面不做 cloneDeep，下面打印的结果会是已经加 1 后的值。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    console.log(this.state.data.times);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用 Immutable 后：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;getInitialState() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  return &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    data: Map(&amp;#123; times: 0 &amp;#125;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;handleAdd() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  this.setState(&amp;#123; data: this.state.data.update(&amp;apos;times&amp;apos;, v =&amp;gt; v + 1) &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  // 这时的 times 并不会改变&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  console.log(this.state.data.get(&amp;apos;times&amp;apos;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面的 &lt;code&gt;handleAdd&lt;/code&gt; 可以简写成：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;handleAdd() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  this.setState((&amp;#123;data&amp;#125;) =&amp;gt; (&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    data: data.update(&amp;apos;times&amp;apos;, v =&amp;gt; v + 1) &amp;#125;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;与-Flux-搭配使用&quot;&gt;&lt;a href=&quot;#与-Flux-搭配使用&quot; class=&quot;headerlink&quot; title=&quot;与 Flux 搭配使用&quot;&gt;&lt;/a&gt;与 Flux 搭配使用&lt;/h3&gt;&lt;p&gt;由于 Flux 并没有限定 Store 中数据的类型，使用 Immutable 非常简单。&lt;/p&gt;
&lt;p&gt;现在是实现一个类似带有添加和撤销功能的 Store：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;import &amp;#123; Map, OrderedMap &amp;#125; from &amp;apos;immutable&amp;apos;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;let todos = OrderedMap();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;let history = [];  // 普通数组，存放每次操作后产生的数据&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;let TodoStore = createStore(&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  getAll() &amp;#123; return todos; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Dispatcher.register(action =&amp;gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  if (action.actionType === &amp;apos;create&amp;apos;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    let id = createGUID();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    history.push(todos);  // 记录当前操作前的数据，便于撤销&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    todos = todos.set(id, Map(&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      id: id,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      complete: false,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      text: action.text.trim()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    TodoStore.emitChange();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125; else if (action.actionType === &amp;apos;undo&amp;apos;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    // 这里是撤销功能实现，&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    // 只需从 history 数组中取前一次 todos 即可&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    if (history.length &amp;gt; 0) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      todos = history.pop();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    TodoStore.emitChange();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;与-Redux-搭配使用&quot;&gt;&lt;a href=&quot;#与-Redux-搭配使用&quot; class=&quot;headerlink&quot; title=&quot;与 Redux 搭配使用&quot;&gt;&lt;/a&gt;与 Redux 搭配使用&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/rackt/redux&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Redux&lt;/a&gt; 是目前流行的 Flux 衍生库。它简化了 Flux 中多个 Store 的概念，只有一个 Store，数据操作通过 Reducer 中实现；同时它提供更简洁和清晰的单向数据流（View -&amp;gt; Action -&amp;gt; Middleware -&amp;gt; Reducer），也更易于开发同构应用。目前已经在我们项目中大规模使用。&lt;/p&gt;
&lt;p&gt;由于 Redux 中内置的 &lt;code&gt;combineReducers&lt;/code&gt; 和 reducer 中的 &lt;code&gt;initialState&lt;/code&gt; 都为原生的 Object 对象，所以不能和 Immutable 原生搭配使用。&lt;/p&gt;
&lt;p&gt;幸运的是，Redux 并不排斥使用 Immutable，可以自己重写 &lt;code&gt;combineReducers&lt;/code&gt; 或使用 &lt;a href=&quot;https://github.com/indexiatech/redux-immutablejs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;redux-immutablejs&lt;/a&gt; 来提供支持。&lt;/p&gt;
&lt;p&gt;上面我们提到 Cursor 可以方便检索和 update 层级比较深的数据，但因为 Redux 中已经有了 select 来做检索，Action 来更新数据，因此 Cursor 在这里就没有用武之地了。&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;Immutable 可以给应用带来极大的性能提升，但是否使用还要看项目情况。由于侵入性较强，新项目引入比较容易，老项目迁移需要评估迁移。对于一些提供给外部使用的公共组件，最好不要把 Immutable 对象直接暴露在对外接口中。&lt;/p&gt;
&lt;p&gt;如果 JS 原生 Immutable 类型会不会太美，被称为 React API 终结者的 Sebastian Markbåge 有一个这样的&lt;a href=&quot;https://github.com/sebmarkbage/ecmascript-immutable-data-structures&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;提案&lt;/a&gt;，能否通过现在还不确定。不过可以肯定的是 Immutable 会被越来越多的项目使用。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;出现的原因&lt;/p&gt;
&lt;p&gt;JavaScript 中的对象一般是可变的（Mutable）&lt;/p&gt;
&lt;p&gt;​    因为使用了引用赋值，新的对象简单的引用了原始对象，改变新的对象将影响到原始对象。&lt;/p&gt;
&lt;p&gt;​    如 &lt;code&gt;foo={a: 1};
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>如何科学的组织React组件样式——模块化  样式之间互不影响</title>
    <link href="http://yoursite.com/2017/09/09/%E5%A6%82%E4%BD%95%E7%A7%91%E5%AD%A6%E7%9A%84%E7%BB%84%E7%BB%87React%E7%BB%84%E4%BB%B6%E6%A0%B7%E5%BC%8F/"/>
    <id>http://yoursite.com/2017/09/09/如何科学的组织React组件样式/</id>
    <published>2017-09-08T16:00:00.000Z</published>
    <updated>2017-09-09T15:47:35.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;方法一：定义类的前缀&quot;&gt;&lt;a href=&quot;#方法一：定义类的前缀&quot; class=&quot;headerlink&quot; title=&quot;方法一：定义类的前缀&quot;&gt;&lt;/a&gt;方法一：定义类的前缀&lt;/h2&gt;&lt;p&gt;我们理想中的文件结构可能会是这样的：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- components&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    - modal&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        - modal.jsx&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        - modal.css  // 可以是任意预处理器&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    - dropdown&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        - dropdown.jsx&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        - dropdown.css&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然而，js现在可以做模块化，css并不行，所有css的定义都可以被视为全局变量，在css被打包后，一个组件的样式有可能会影响到其他组件，于是我们可以通过命名约定（name convention）来曲线救国（这一点并不局限于react开发）。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;@modal-prefix: modal;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.@&amp;#123;modal-prefix&amp;#125; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.@&amp;#123;modal-prefix&amp;#125;-title &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;类似于上面的使用less的方式，在文件顶部先定义个类的前缀，来尽量避免命名冲突的可能。于是在组件中就可以这样做&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;import React from &amp;apos;react&amp;apos;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;import &amp;apos;./modal.less&amp;apos;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;export default React.createClass(&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    render () &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        return &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;div className=&amp;quot;modal-title&amp;quot;&amp;gt;Hello&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;方法二-：CSS-in-JS（行内样式）&quot;&gt;&lt;a href=&quot;#方法二-：CSS-in-JS（行内样式）&quot; class=&quot;headerlink&quot; title=&quot;方法二 ：CSS in JS（行内样式）&quot;&gt;&lt;/a&gt;方法二 ：CSS in JS（行内样式）&lt;/h2&gt;&lt;p&gt;把样式也直接写进组件里，即使用inline style。&lt;/p&gt;
&lt;p&gt;首先，直接用传统的inline style并不可取，它对属性的支持有限，比如不能用伪类、多个不同浏览器前缀的相同属性、媒体查询、动画等。&lt;/p&gt;
&lt;p&gt;至于重用样式而言，在react中倒是还行：将需要重用的样式对象作为模块导出即可。&lt;/p&gt;
&lt;p&gt;CSS in JS可以实现，比如：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;react-style&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/js-next/react-style&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github地址&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;方法三：local-scoped-CSS-（webpack-css模块化）&quot;&gt;&lt;a href=&quot;#方法三：local-scoped-CSS-（webpack-css模块化）&quot; class=&quot;headerlink&quot; title=&quot;方法三：local scoped CSS  （webpack css模块化）&quot;&gt;&lt;/a&gt;方法三：local scoped CSS  （webpack css模块化）&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/css-modules/css-modules&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/css-modules/css-modules&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/webpack/css-loader#local-scope&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/webpack/css-loader#local-scope&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;用这个东西现在是webpack官方支持的，已在&lt;code&gt;css-loader&lt;/code&gt;中实现，&lt;/p&gt;
&lt;p&gt;(1)&lt;/p&gt;
&lt;p&gt;​    1.本地样式 用 :local(.title) { background: red; }&lt;/p&gt;
&lt;p&gt;​    2.共享样式用：&lt;/p&gt;
&lt;p&gt;​    :global {&lt;br&gt;      .global-class-name {&lt;br&gt;            color: green;&lt;br&gt;​      }&lt;br&gt;​    }&lt;/p&gt;
&lt;p&gt;(2)代码中运用  本地声明&lt;/p&gt;
&lt;p&gt;1.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;// style.css&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;:local(.title) &amp;#123; background: red; &amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2.在需要这份样式的组件里引入这个模块：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;import styles from &amp;apos;style.css&amp;apos;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;div className=&amp;#123;styles.title&amp;#125;&amp;gt;&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;3.首先css的语法中是不支持这个:local()的，页面最终的代码为：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;div class=&amp;quot;_3dpOqNNJl6oyjYpdDHCFD9&amp;quot; data-reactid=&amp;quot;.0.2.1&amp;quot;&amp;gt;Info&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这也算是个预处理器，它将&lt;code&gt;:local(.title)&lt;/code&gt;的类名变成了一个哈希值，仅可以通过模块导入的方式来获取这个哈希值 并应用到组件上（生成的类名是可以配置的）。&lt;/p&gt;
&lt;p&gt;(3)webpack配置：在&lt;code&gt;css-loader&lt;/code&gt;可以通过添加&lt;code&gt;module&lt;/code&gt;选项，&lt;/p&gt;
&lt;p&gt;​        使得css默认定义的是local scoped的，&lt;/p&gt;
&lt;p&gt;​    希望共享的可以用:global()定义。&lt;/p&gt;
&lt;p&gt;也可以和预处理器混用：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;:global &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  .global-class-name &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    color: green;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（4）目前看下来，它只对class名做哈希，对标签等不做哈希：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;:local(.title span) // .[hash] span&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然而&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;:local(.title .name) // .[hash0] .[hash1]&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个算是一个有意思的方式，首先它依赖于webpack，而webpack并不局限于React的开发，任何前端项目都可以使用webpack，那么就也都可以使用CSS Modules的概念&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;方法一：定义类的前缀&quot;&gt;&lt;a href=&quot;#方法一：定义类的前缀&quot; class=&quot;headerlink&quot; title=&quot;方法一：定义类的前缀&quot;&gt;&lt;/a&gt;方法一：定义类的前缀&lt;/h2&gt;&lt;p&gt;我们理想中的文件结构可能会是这样的：&lt;/p&gt;
&lt;figure class=&quot;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>vscode中 针对 react的 eslint配置</title>
    <link href="http://yoursite.com/2017/09/09/vscode----eslint%20+%E9%BB%98%E8%AE%A4%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    <id>http://yoursite.com/2017/09/09/vscode----eslint +默认配置文件/</id>
    <published>2017-09-08T16:00:00.000Z</published>
    <updated>2017-09-14T06:59:39.000Z</updated>
    
    <content type="html">&lt;p&gt; eslint官网：   &lt;a href=&quot;http://eslint.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://eslint.cn/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;一：vscode默认配置&quot;&gt;&lt;a href=&quot;#一：vscode默认配置&quot; class=&quot;headerlink&quot; title=&quot;一：vscode默认配置&quot;&gt;&lt;/a&gt;一：vscode默认配置&lt;/h3&gt;&lt;p&gt;首选项  ——&amp;gt;设置&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  //控制台---&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;quot;workbench.colorTheme&amp;quot;: &amp;quot;Monokai&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  //文件---&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;quot;files.autoSave&amp;quot;: &amp;quot;onFocusChange&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  //配置语言的文件关联&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;quot;files.associations&amp;quot;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;*.js&amp;quot;: &amp;quot;javascriptreact&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  //editor----&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;quot;editor.fontSize&amp;quot;: 14,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;quot;editor.detectIndentation&amp;quot;: false,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;quot;editor.tabSize&amp;quot;: 2,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;quot;editor.formatOnType&amp;quot;: false,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;quot;editor.formatOnSave&amp;quot;: false,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;quot;editor.wordWrap&amp;quot;: &amp;quot;on&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  //关闭VS自带的 javascript验证&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;quot;javascript.validate.enable&amp;quot;: false,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  //eslint---- 代码检查(默认只支持 js 文件的脚本检测)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  //支持类 html 文件（如 vue ）的内联脚本检测 安装 eslint-plugin-html &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;quot;eslint.options&amp;quot;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;plugins&amp;quot;: [&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &amp;quot;html&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;quot;eslint.validate&amp;quot;: [&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;javascript&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;javascriptreact&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;html&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;vue&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  ],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  // 在保存时自动修复错误&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;quot;eslint.autoFixOnSave&amp;quot;: true,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  //emmet缩写----&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  // 设置.vue 文件与 HTML 的关联&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;quot;emmet.includeLanguages&amp;quot;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;javascript&amp;quot;: &amp;quot;javascriptreact&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;vue&amp;quot;: &amp;quot;html&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;quot;emmet.syntaxProfiles&amp;quot;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;vue-html&amp;quot;: &amp;quot;html&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;vue&amp;quot;: &amp;quot;html&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;二：-eslintrc-js&quot;&gt;&lt;a href=&quot;#二：-eslintrc-js&quot; class=&quot;headerlink&quot; title=&quot;二：.eslintrc.js&quot;&gt;&lt;/a&gt;二：.eslintrc.js&lt;/h3&gt;&lt;p&gt;​    针对项目设置，放在根目录下&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;module.exports = &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  root: true,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  parser: &amp;apos;babel-eslint&amp;apos;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;quot;env&amp;quot;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;es6&amp;quot;: true,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;browser&amp;quot;: true,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;node&amp;quot;: true&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;quot;extends&amp;quot;: &amp;apos;airbnb&amp;apos;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;quot;parserOptions&amp;quot;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;ecmaVersion&amp;quot;: 6,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;sourceType&amp;quot;: &amp;apos;module&amp;apos;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;ecmaFeatures&amp;quot;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &amp;quot;experimentalObjectRestSpread&amp;quot;: true,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &amp;quot;arrowFunctions&amp;quot;: true&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;quot;plugins&amp;quot;: [&amp;quot;react&amp;quot;],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;quot;rules&amp;quot;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;apos;no-debugger&amp;apos;: process.env.NODE_ENV === &amp;apos;production&amp;apos;? 2 : 0,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;no-underscore-dangle&amp;quot;: &amp;quot;off&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;react/prop-types&amp;quot;: &amp;quot;off&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;import/extensions&amp;quot;: [&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &amp;quot;error&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &amp;quot;never&amp;quot;, &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;web.js&amp;quot;: &amp;quot;never&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;json&amp;quot;: &amp;quot;never&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;import/no-extraneous-dependencies&amp;quot;: [&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &amp;quot;error&amp;quot;, &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;devDependencies&amp;quot;: true&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;import/no-unresolved&amp;quot;: [&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &amp;quot;error&amp;quot;, &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;ignore&amp;quot;: [&amp;quot;antd-mobile&amp;quot;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;indent&amp;quot;: [&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &amp;quot;error&amp;quot;, 2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;indent&amp;quot;: [&amp;quot;error&amp;quot;, 2],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;linebreak-style&amp;quot;: [&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &amp;quot;error&amp;quot;, &amp;quot;unix&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;quotes&amp;quot;: [&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &amp;quot;error&amp;quot;, &amp;quot;single&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;三-安装相关eslint插件-（npm-cnpm-安装）&quot;&gt;&lt;a href=&quot;#三-安装相关eslint插件-（npm-cnpm-安装）&quot; class=&quot;headerlink&quot; title=&quot;三 安装相关eslint插件 （npm/cnpm 安装）&quot;&gt;&lt;/a&gt;三 安装相关eslint插件 （npm/cnpm 安装）&lt;/h3&gt;&lt;p&gt;​     “eslint”: “^4.6.1”,&lt;/p&gt;
&lt;p&gt;​    “eslint-config-airbnb”: “^15.1.0”,&lt;/p&gt;
&lt;p&gt;​    “eslint-plugin-import”: “^2.7.0”,&lt;/p&gt;
&lt;p&gt;​    “eslint-plugin-jsx-a11y”: “^6.0.2”,&lt;/p&gt;
&lt;p&gt;​    “eslint-plugin-react”: “^7.3.0”,&lt;/p&gt;
&lt;p&gt;​     “babel-loader”: “^6.3.2”,&lt;/p&gt;
&lt;p&gt;ESLint 允许你指定你想要支持的 JavaScript 语言选项。默认情况下，ESLint 支持 ECMAScript 5 语法。你可以覆盖该设置启用对 ECMAScript 其它版本和 JSX 的支持。&lt;/p&gt;
&lt;p&gt;对 JSX 语法的支持不用于对 React 的支持。React 适用于特定 ESLint 无法识别的 JSX 语法。如果你正在使用 React 和 想要 React 语义，我们推荐你使用 &lt;a href=&quot;https://github.com/yannickcr/eslint-plugin-react&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;eslint-plugin-react&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&quot;四、在项目中执行-eslint&quot;&gt;&lt;a href=&quot;#四、在项目中执行-eslint&quot; class=&quot;headerlink&quot; title=&quot;四、在项目中执行  eslint&quot;&gt;&lt;/a&gt;四、在项目中执行  eslint&lt;/h3&gt;&lt;p&gt;package.json 中&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;quot;scripts&amp;quot;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   	&amp;quot;lint&amp;quot;: &amp;quot;eslint src --ext .js&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;,&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;说明:eslint 命令&lt;/p&gt;
&lt;h4 id=&quot;ext&quot;&gt;&lt;a href=&quot;#ext&quot; class=&quot;headerlink&quot; title=&quot;--ext&quot;&gt;&lt;/a&gt;&lt;code&gt;--ext&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;这个选项允许你指定ESLint在指定的目录下查找JavaScript文件时要使用的文件扩展名。默认情况下，它使用&lt;code&gt;.js&lt;/code&gt;作为唯一性文件扩展名。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;# Use only .js2 extension&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;eslint . --ext .js2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Use both .js and .js2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;eslint . --ext .js --ext .js2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Also use both .js and .js2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;eslint . --ext .js,.js2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意：如果你使用了水珠模式，则&lt;code&gt;--ext&lt;/code&gt;被忽略&lt;/p&gt;
&lt;p&gt;例如，&lt;code&gt;eslint lib/* --ext .js&lt;/code&gt;将匹配&lt;code&gt;lib/&lt;/code&gt;下的所有文件，忽略扩展名。&lt;/p&gt;
&lt;h3 id=&quot;五、番外&quot;&gt;&lt;a href=&quot;#五、番外&quot; class=&quot;headerlink&quot; title=&quot;五、番外&quot;&gt;&lt;/a&gt;五、番外&lt;/h3&gt;&lt;h5 id=&quot;npm安装相关组件&quot;&gt;&lt;a href=&quot;#npm安装相关组件&quot; class=&quot;headerlink&quot; title=&quot;npm安装相关组件&quot;&gt;&lt;/a&gt;npm安装相关组件&lt;/h5&gt;&lt;h6 id=&quot;安装eslint&quot;&gt;&lt;a href=&quot;#安装eslint&quot; class=&quot;headerlink&quot; title=&quot;安装eslint&quot;&gt;&lt;/a&gt;安装eslint&lt;/h6&gt;&lt;p&gt;&lt;code&gt;$ npm install eslint -g&lt;/code&gt;&lt;/p&gt;
&lt;h5 id=&quot;安装eslint-plugin-react&quot;&gt;&lt;a href=&quot;#安装eslint-plugin-react&quot; class=&quot;headerlink&quot; title=&quot;安装eslint-plugin-react&quot;&gt;&lt;/a&gt;安装eslint-plugin-react&lt;/h5&gt;&lt;p&gt;识别react中的一些语法检验&lt;br&gt;&lt;code&gt;$ npm install eslint-plugin-react&lt;/code&gt;&lt;/p&gt;
&lt;h5 id=&quot;安装babel-eslint&quot;&gt;&lt;a href=&quot;#安装babel-eslint&quot; class=&quot;headerlink&quot; title=&quot;安装babel-eslint&quot;&gt;&lt;/a&gt;安装babel-eslint&lt;/h5&gt;&lt;p&gt;如果用到了es6的新语法, 需要安装babel-eslint,不然会把箭头函数识别成错误&lt;br&gt;&lt;code&gt;$ npm install babel-eslint&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&quot;在项目的根目录创建配置文件-eslintrc-json&quot;&gt;&lt;a href=&quot;#在项目的根目录创建配置文件-eslintrc-json&quot; class=&quot;headerlink&quot; title=&quot;在项目的根目录创建配置文件.eslintrc.json&quot;&gt;&lt;/a&gt;在项目的根目录创建配置文件.eslintrc.json&lt;/h4&gt;&lt;p&gt;eslint会根据.eslintrc.json定义的规则进行代码检测(在mac中的.开头的文件为隐藏文件);&lt;br&gt;eslint官方给出的一些有关react配置的文档:&lt;br&gt;&lt;a href=&quot;https://github.com/yannickcr/eslint-plugin-react&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/yannickcr/eslint-plugin-react&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一般有两种做法:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;宽松的定义,只检验一些语法上的错误.&lt;/li&gt;
&lt;li&gt;严谨的定义,可以当团队书写代码的规范,把规范错误定义成&lt;strong&gt;警告&lt;/strong&gt;, 语法错误定义成&lt;strong&gt;错误&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt; eslint官网：   &lt;a href=&quot;http://eslint.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://eslint.cn/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;一：vscode默认配置&quot;&gt;&lt;a href=&quot;#一：vscod
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2017/09/05/%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%85%83%E7%B4%A0%E7%9A%84%E6%B0%B4%E5%B9%B3%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD/"/>
    <id>http://yoursite.com/2017/09/05/如何实现元素的水平垂直居中/</id>
    <published>2017-09-05T07:06:36.000Z</published>
    <updated>2017-09-05T08:43:30.000Z</updated>
    
    <content type="html">&lt;hr&gt;
&lt;p&gt;title: 如何实现元素的水平垂直居中&lt;br&gt;date: 2017-09-05&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.jianshu.com/p/09ece194956a&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jianshu.com/p/09ece194956a&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;水平居中&quot;&gt;&lt;a href=&quot;#水平居中&quot; class=&quot;headerlink&quot; title=&quot;水平居中&quot;&gt;&lt;/a&gt;水平居中&lt;/h3&gt;&lt;h4 id=&quot;1-方法1：若是行内元素&quot;&gt;&lt;a href=&quot;#1-方法1：若是行内元素&quot; class=&quot;headerlink&quot; title=&quot;1.方法1：若是行内元素&quot;&gt;&lt;/a&gt;1.方法1：若是行内元素&lt;/h4&gt;&lt;p&gt;  给其父级元素设置text-align:center,可以实现行内元素水平居中,&lt;/p&gt;
&lt;h4 id=&quot;2-方法2-若是块级元素&quot;&gt;&lt;a href=&quot;#2-方法2-若是块级元素&quot; class=&quot;headerlink&quot; title=&quot;2.方法2:若是块级元素&quot;&gt;&lt;/a&gt;2.方法2:若是块级元素&lt;/h4&gt;&lt;h4 id=&quot;div-p-ul-li-ol-h1-h6-dl-dt-dd-address-article-figure-audio-video-section-table-canvas-header-table-footer-独自占一行-支持宽度和高度，要想实现水平居中-margin-0-auto&quot;&gt;&lt;a href=&quot;#div-p-ul-li-ol-h1-h6-dl-dt-dd-address-article-figure-audio-video-section-table-canvas-header-table-footer-独自占一行-支持宽度和高度，要想实现水平居中-margin-0-auto&quot; class=&quot;headerlink&quot; title=&quot;(div,p,ul,li,ol,h1-h6,dl,dt,dd,address,article,figure,audio,video,section,table,canvas,header,table,footer)独自占一行,支持宽度和高度，要想实现水平居中:margin:0 auto;&quot;&gt;&lt;/a&gt;(div,p,ul,li,ol,h1-h6,dl,dt,dd,address,article,figure,audio,video,section,table,canvas,header,table,footer)独自占一行,支持宽度和高度，要想实现水平居中:margin:0 auto;&lt;/h4&gt;&lt;p&gt;方法3:若是子元素有浮动,为了让子元素水平居中,则可以让父元素宽度设置为fit-content,并且配合margin:0 auto&lt;/p&gt;
&lt;p&gt;注意这个属性值fit-content配上margin:0 auto才会让其水平居中,目前只有chrome,firfox,Opera浏览器支持该属性值,并且只能实现水平居中,无法实现垂直居中,也没有height:fit-content,该属性,即使设置了也不生效&lt;/p&gt;
&lt;p&gt;&lt;ul class=&quot;parent&quot;&gt;&lt;br&gt;    &lt;li&gt;随笔川迹&lt;/li&gt;&lt;br&gt;    &lt;li&gt;itclan&lt;/li&gt;&lt;br&gt;    &lt;li&gt;个人简介&lt;/li&gt;&lt;br&gt;    &lt;li&gt;联系地止&lt;/li&gt;&lt;br&gt;&lt;/ul&gt;&lt;br&gt;css层叠样式代码&lt;/p&gt;
&lt;p&gt;ul,li{&lt;br&gt;    list-style:none;&lt;br&gt;}&lt;br&gt;.parent{&lt;br&gt;    width:100%;&lt;br&gt;    width:-moz-fit-content;&lt;br&gt;    width:-webkit-fit-content;&lt;br&gt;    width:fit-content;   /&lt;em&gt;父元素宽度设置fit-content,高度是没有这样的写法的&lt;/em&gt;/&lt;br&gt;    margin:0 auto;     /&lt;em&gt;注意只设置得了水平居中,此方法,垂直居中无法&lt;/em&gt;/&lt;br&gt;}&lt;br&gt;li{&lt;br&gt;    float:left;    /&lt;em&gt;子元素设置了浮动&lt;/em&gt;/&lt;br&gt;    margin:0 5px 0;&lt;br&gt;}&lt;/p&gt;
&lt;h3 id=&quot;方法4-使用flex布局-老版本&quot;&gt;&lt;a href=&quot;#方法4-使用flex布局-老版本&quot; class=&quot;headerlink&quot; title=&quot;方法4 使用flex布局,老版本:&quot;&gt;&lt;/a&gt;&lt;code&gt;方法4&lt;/code&gt; 使用flex布局,老版本:&lt;/h3&gt;&lt;p&gt;设置父元素&lt;code&gt;display:box;&lt;/code&gt;(声明弹性盒模型),&lt;/p&gt;
&lt;p&gt;&lt;code&gt;box-orient:horizontal;&lt;/code&gt;(父元素设置,用来确定子元素的方向,是横着的还是竖着的,horizontal是横着(水平),vertical表示竖着,垂直,),&lt;/p&gt;
&lt;p&gt;&lt;code&gt;box-pack:center;&lt;/code&gt;(决定盒子内部剩余空间的对齐表现,这里是居中,均等地分割多余空间）&lt;/p&gt;
&lt;h3 id=&quot;方法5-使用flex-新版本&quot;&gt;&lt;a href=&quot;#方法5-使用flex-新版本&quot; class=&quot;headerlink&quot; title=&quot;方法5 使用flex,新版本:&quot;&gt;&lt;/a&gt;方法5 使用flex,新版本:&lt;/h3&gt;&lt;p&gt;设置父元素&lt;code&gt;display:flex&lt;/code&gt;(声明弹性盒模型),&lt;/p&gt;
&lt;p&gt;&lt;code&gt;flex-direction:row&lt;/code&gt;(设置主轴方向为水平方向),&lt;/p&gt;
&lt;p&gt;just-content:center`(规定主轴方向富裕空间的管理,所有子元素的居中,对应老版本的box-pack)&lt;/p&gt;
&lt;h3 id=&quot;方法6-使用css3中新增的transform属性&quot;&gt;&lt;a href=&quot;#方法6-使用css3中新增的transform属性&quot; class=&quot;headerlink&quot; title=&quot;方法6 使用css3中新增的transform属性,&quot;&gt;&lt;/a&gt;&lt;code&gt;方法6&lt;/code&gt; 使用css3中新增的transform属性,&lt;/h3&gt;&lt;p&gt;子元素设置离x轴50%&lt;/p&gt;
&lt;h3 id=&quot;方法7-固定宽高：&quot;&gt;&lt;a href=&quot;#方法7-固定宽高：&quot; class=&quot;headerlink&quot; title=&quot;方法7 固定宽高：&quot;&gt;&lt;/a&gt;&lt;code&gt;方法7&lt;/code&gt; 固定宽高：&lt;/h3&gt;&lt;h3 id=&quot;元素使用绝对定位方式-以及负值的margin-left&quot;&gt;&lt;a href=&quot;#元素使用绝对定位方式-以及负值的margin-left&quot; class=&quot;headerlink&quot; title=&quot;元素使用绝对定位方式,以及负值的margin-left&quot;&gt;&lt;/a&gt;元素使用绝对定位方式,以及负值的margin-left&lt;/h3&gt;&lt;p&gt;.parent{&lt;br&gt;​    position:relative;&lt;br&gt;}&lt;br&gt;.son{&lt;br&gt;​    width:100px;&lt;br&gt;​    height:100px;&lt;br&gt;​    position:absolute;&lt;br&gt;​    left:50%;&lt;br&gt;​    margin-left:-50px; /&lt;em&gt;-宽度/2&lt;/em&gt;/&lt;br&gt;​    background:green;&lt;br&gt;}&lt;/p&gt;
&lt;h3 id=&quot;方法8-子元素使用绝对定位方式-position-absolute以及top-left-0-right-0-bottom-0-属性值设置为0-margin-0-auto&quot;&gt;&lt;a href=&quot;#方法8-子元素使用绝对定位方式-position-absolute以及top-left-0-right-0-bottom-0-属性值设置为0-margin-0-auto&quot; class=&quot;headerlink&quot; title=&quot;方法8 子元素使用绝对定位方式,position:absolute以及top,left:0,right:0;bottom:0,属性值设置为0,margin:0 auto;&quot;&gt;&lt;/a&gt;&lt;code&gt;方法8&lt;/code&gt; 子元素使用绝对定位方式,&lt;code&gt;position:absolute&lt;/code&gt;以及&lt;code&gt;top&lt;/code&gt;,&lt;code&gt;left:0&lt;/code&gt;,&lt;code&gt;right:0&lt;/code&gt;;&lt;code&gt;bottom:0&lt;/code&gt;,属性值设置为0,&lt;code&gt;margin:0 auto&lt;/code&gt;;&lt;/h3&gt;&lt;h2 id=&quot;垂直居中&quot;&gt;&lt;a href=&quot;#垂直居中&quot; class=&quot;headerlink&quot; title=&quot;垂直居中&quot;&gt;&lt;/a&gt;垂直居中&lt;/h2&gt;&lt;h4 id=&quot;方法1-若是单行文本内容-可以设置line-height等于父元素的高度&quot;&gt;&lt;a href=&quot;#方法1-若是单行文本内容-可以设置line-height等于父元素的高度&quot; class=&quot;headerlink&quot; title=&quot;方法1,若是单行文本内容,可以设置line-height等于父元素的高度,&quot;&gt;&lt;/a&gt;&lt;code&gt;方法1&lt;/code&gt;,若是单行文本内容,可以设置&lt;code&gt;line-height&lt;/code&gt;等于父元素的高度,&lt;/h4&gt;&lt;p&gt;注意这是定高的，也就是高度是固定不变的,这种方法只适用于单行文本的元素才适用,比如块级元素里面文本,图片&lt;/p&gt;
&lt;h3 id=&quot;方法2，若是行内块级元素，也就是给它设置了display-inline-block属性&quot;&gt;&lt;a href=&quot;#方法2，若是行内块级元素，也就是给它设置了display-inline-block属性&quot; class=&quot;headerlink&quot; title=&quot;方法2，若是行内块级元素，也就是给它设置了display:inline-block属性,&quot;&gt;&lt;/a&gt;方法2，若是行内块级元素，也就是给它设置了&lt;code&gt;display:inline-block&lt;/code&gt;属性,&lt;/h3&gt;&lt;p&gt;这种方法针对一些&lt;code&gt;img&lt;/code&gt;等行内元素,比较常用,&lt;code&gt;vertical-align:middle&lt;/code&gt;和一个伪元素内容块处于容器的中央,&lt;code&gt;注意&lt;/code&gt;要给这个伪类高度设置高度100%，此方法在IE6下失效,IE,7,8,9有用,但是又在IE10,11又失效(IEText测的)&lt;/p&gt;
&lt;p&gt;代码实例如下所示&lt;br&gt;&lt;code&gt;html结构代码&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;div class=&amp;quot;parent&amp;quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      ![](img/QrCode.jpg)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;css层叠样式代码&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.parent&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    width:500px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    height:500px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    border:1px solid red;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.parent::after, .son&amp;#123;        /*父级元素和子元素都设置display:inline-block*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:inline-block;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    vertical-align: middle;   /*设置vertical-align:middle*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.parent::after&amp;#123;   /*父元素添加一个伪类,并且设置高度100%*/ &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    content:&amp;quot;&amp;quot;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    height:100%;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;img&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    border:1px solid blue;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    border-left:none;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;方法3-子元素可用vertical-align-middle-使元素垂直对齐-和display-tab-cell-让元素以表格形式渲染-父元素使用display-table-让元素以表格的形式渲染&quot;&gt;&lt;a href=&quot;#方法3-子元素可用vertical-align-middle-使元素垂直对齐-和display-tab-cell-让元素以表格形式渲染-父元素使用display-table-让元素以表格的形式渲染&quot; class=&quot;headerlink&quot; title=&quot;方法3,子元素可用vertical-align:middle(使元素垂直对齐),和display:tab-cell(让元素以表格形式渲染),父元素使用display:table,让元素以表格的形式渲染&quot;&gt;&lt;/a&gt;&lt;code&gt;方法3&lt;/code&gt;,子元素可用&lt;code&gt;vertical-align:middle&lt;/code&gt;(使元素垂直对齐),和&lt;code&gt;display:tab-cell&lt;/code&gt;(让元素以表格形式渲染),&lt;code&gt;父元素使用display:table&lt;/code&gt;,让元素以表格的形式渲染&lt;/h3&gt;&lt;p&gt;示例代码如下所示&lt;br&gt;&lt;code&gt;html内容结构代码&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;div class=&amp;quot;parent&amp;quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;div class=&amp;quot;son&amp;quot;&amp;gt;contentcontentcontentcontentcontentcontentcontent&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;css层叠样式结构代码&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.parent&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:table; /*让元素以表格形式渲染*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    border:1px solid red;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    background:red;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    height:200px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.son&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:table-cell; /*让元素以表格的单元表格形式渲染*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    vertical-align:middle;/*使用元素的垂直对齐*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    background:yellow;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;方法4,使用&lt;code&gt;Flex布局&lt;/code&gt;,&lt;code&gt;display:box(声明弹性盒模型)&lt;/code&gt;,&lt;code&gt;box-orient:vertical;&lt;/code&gt;(父元素设置,用来确定子元素的方向,垂直方向向的,竖着的,horizontal是横着的),&lt;code&gt;box-pack:center;&lt;/code&gt;(决定盒子内部剩余空间的对齐表现,这里居中)&lt;/p&gt;
&lt;p&gt;方法5,使用Flex布局,&lt;code&gt;display:flex(声明弹性盒模型)&lt;/code&gt;,&lt;code&gt;align-items:center&lt;/code&gt;(元素在侧轴中间位置,富裕空间在侧轴两侧)&lt;code&gt;flex-direction:coluumn&lt;/code&gt;(设置主轴方向为垂直方向)&lt;br&gt;&lt;code&gt;优点&lt;/code&gt;：使用display:flex布局,内容块的宽高任意,优雅的溢出，可用于复杂的高级布局技术&lt;br&gt;&lt;code&gt;缺点&lt;/code&gt;:IE678不支持,兼容性处理,火狐，谷歌,欧朋要浏览器前缀&lt;/p&gt;
&lt;p&gt;方法6,设置父元素相对定位&lt;code&gt;(position:relative)&lt;/code&gt;,子元素设置绝对定位&lt;code&gt;position:absolute&lt;/code&gt;,&lt;code&gt;top:50%&lt;/code&gt;,&lt;code&gt;height高度固定,利用margin负半值的方式&lt;/code&gt;，让元素垂直居中&lt;/p&gt;
&lt;p&gt;&lt;code&gt;优点&lt;/code&gt;：适用于所有浏览器&lt;br&gt;&lt;code&gt;缺点&lt;/code&gt;：父元素空间不够时,子元素可能不可见,当浏览器窗口缩小时,滚动条不出现时,如果子元素设置了overflow:auto,则高度不够时会出现滚动条&lt;br&gt;方法7,设置父元素相对定位(position:relative),子元素设置绝对定位,margin:auto 0,高度固定,left | top | right | bottom都设置为0，但是在IE8低版本浏览器以下失效&lt;/p&gt;
&lt;p&gt;方法8,需要在&lt;code&gt;居中元素前面放一个空块级元素&lt;/code&gt;(比如div)即可,然后&lt;code&gt;设置这个div的高度为50%,margin-bottom为元素高度的一半&lt;/code&gt;,而且&lt;code&gt;居中元素需要清除浮动&lt;/code&gt;,需要注意的是,使用这种方法,&lt;code&gt;如果你的居中元素是放在body中的话,需要给html,body设置一个height:100%的属性&lt;/code&gt;&lt;br&gt; &lt;code&gt;html结构代码如下所示&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt; &amp;lt;div class=&amp;quot;box&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt;Content&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;css层叠样式&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt; html,body&amp;#123;height:100%;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; .box&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        /*float:left;*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        height:50%;  /*相对父元素的高度的50%*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        margin-bottom:-120px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.content&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        clear:both;/*清除浮动*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        width:240px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        height:240px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        position:relative;/*只能用相对定位*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        background:green;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;实例效果如下所示&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用一个空标签使其元素垂直居中.png&lt;/p&gt;
&lt;p&gt;&lt;code&gt;优点&lt;/code&gt;:兼容所有的浏览器,在没有足够的空间下,内容不会被切掉&lt;br&gt;&lt;code&gt;缺点&lt;/code&gt;:元素高度被固定死,无法达到内容自适应,如果居中元素加上overflow,要么元素出现滚动条,要么元素被切掉,另外就是一个就是加上了一个空标签&lt;br&gt;&lt;code&gt;html示例代码如下所示&lt;/code&gt;方法9`:使用内边距的方式使其垂直居中 &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;div class=&amp;quot;parent&amp;quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;div class=&amp;quot;son&amp;quot;&amp;gt;content&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;css示例代码如下所示&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.son&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    padding:30px 0 30px 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    border:1px solid red;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;实例效果如图所示&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;内填充的方式垂直居中1.png&lt;/p&gt;
&lt;p&gt;&lt;code&gt;缺点&lt;/code&gt;:使用这种方法不能给容器固定高度,如果加了高度的话,要想要达到效果,那么要减去对应的高度&lt;/p&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;水平-垂直居中&quot;&gt;&lt;a href=&quot;#水平-垂直居中&quot; class=&quot;headerlink&quot; title=&quot;水平+垂直居中&quot;&gt;&lt;/a&gt;水平+垂直居中&lt;/h3&gt;&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;若是文本图片,则可以使用line-height:高度；text-align:center&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;示例代码如下所示&lt;/code&gt;&lt;br&gt;&lt;code&gt;html结构代码&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;div class=&amp;quot;wrap&amp;quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    文本水平垂直居中显示&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;css结构代码&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.wrap&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        width:400px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        height:400px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        text-align:center;  /*文本水平居中显示*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        line-height:400px;  /*垂直居中显示*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        font-size:36px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        border:1px solid red;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;实例效果图如下所示&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;文本水平垂直居中显示.png&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;若是定宽定高,&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;使用绝对定位position:absolute,left:50%,top:50%,使用margin负半值&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;进行元素的水平垂直居中显示,代码如下所示:&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;html结构内容代码&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;div class=&amp;quot;parent&amp;quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;div class=&amp;quot;son&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;css示例代码如下所示&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.parent&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  width:100%;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  height:500px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  position:relative;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  background:red;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.son&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  width:100px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  height:100px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  background:pink;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  position:absolute;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  left:50%;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  top:50%;      /*top50%*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      margin-left:-50px;/*-(元素宽度/2)*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  margin-top:-50px; /*-(元素高度/2)*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;实例效果如下所示&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;p&gt;使用绝对定位margin负半值水平垂直居中显示.png&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;绝对定位absolute+margin:auto&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;,同时,&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;top:0&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;left:0&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;right:0&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;,&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;bottom:0&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这种方式使一个元素水平垂直居中也是比较常见的&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;html内容结构代码&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;div class=&amp;quot;parent&amp;quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;lt;div class=&amp;quot;son&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;css层叠样式代码&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.son&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    position:absolute;  /*设置绝对定位*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    width:100px;        /*宽度固定*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    height:100px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    background:#abcdef;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    top:0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    left:0;             /*设置top | left | right | bottom都等于0*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    right:0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    bottom:0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    margin: auto;      /*水平垂直居中*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;实例效果图显示&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用决定定位,设置left-top-bottom为0结合margin-auto水平垂直居中.png&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用js动态计算使其元素水平垂直居中&lt;ul&gt;
&lt;li&gt;水平居中元素应设置为绝对定位,获取元素的位置,距离浏览器左边，上边的距离,并且进行赋值&lt;/li&gt;
&lt;li&gt;left:(浏览器的宽度-元素的宽度)/2&lt;/li&gt;
&lt;li&gt;top:(浏览器的高度-元素的高度)/2&lt;br&gt;示例代码所示&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;html内容结构代码&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;div id=&amp;quot;box&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;css示例代码&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt; #box&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    width:100px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    height:100px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    background:red;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    position:absolute;  /*设置绝对定位*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;js代码&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/*&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;* @desc 利用js控制一个元素的水平垂直居中显示&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;* &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;window.onload = function()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  var oBox=document.getElementById(&amp;quot;box&amp;quot;),&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      left=(document.documentElement.clientWidth-oBox.offsetWidth)/2,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      top = (document.documentElement.clientHeight)/2;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      oBox.style.left = left+&amp;quot;px&amp;quot;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      oBox.style.top = top+&amp;quot;px&amp;quot;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  //当屏幕尺寸发生变化时&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  window.onresize = function()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     var top = (document.documentElement.clientHeight-oBox.offsetHeight)/2,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         left = (document.documentElement.clientWidth-oBox.offsetWidth)/2; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         oBox.style.top = top+&amp;quot;px&amp;quot;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         oBox.style.left = left+&amp;quot;px&amp;quot;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;实例效果如下所示&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用原生js使元素水平垂直居中.png&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用jQuery实现元素的水平垂直居中&lt;ul&gt;
&lt;li&gt;获取元素&lt;/li&gt;
&lt;li&gt;获取浏览器可视宽度$(window).width();&lt;/li&gt;
&lt;li&gt;获取浏览器可视高度$(window).height();&lt;/li&gt;
&lt;li&gt;元素距离浏览器左边的距离left:($(window).width()-元素.width())/2&lt;/li&gt;
&lt;li&gt;元素距离浏览器上边的距离top:($(window).height()-元素.height())/2&lt;/li&gt;
&lt;li&gt;resize:当调整浏览器窗口的大小时，发生 resize 事件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;示例代码&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;div id=&amp;quot;box&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;css层叠样式代码&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt; #box&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    width:100px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    height:100px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    background:blue;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    position:absolute;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;js代码&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/*&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*  @dec 利用jQuery实现元素水平垂直居中&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*  @function getStyle 水平垂直居中元素&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*  @event resize&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(function()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; getStyle();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; function getStyle()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   var oBox = $(&amp;quot;#box&amp;quot;),&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       oW = $(window).width(),   //获取浏览器的可视宽度&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       oH  = $(window).height(), //获取浏览器的可视高度&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       l = (oW-oBox.width())/2,  // 元素距离浏览器左边的距离&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       t = (oH-oBox.height())/2; //元素距离浏览器右边的距离&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       oBox.css(&amp;#123;                    //赋值操作,left,top值&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           left:l,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           top:t&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//当调整浏览器窗口的大小时,发生 resize 事件&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    $(window).resize(function()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        getStyle();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;实例效果如下所示&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用jquery使元素水平垂直居中.png&lt;/p&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;两种常见布局-圣杯布局与双飞翼布局&quot;&gt;&lt;a href=&quot;#两种常见布局-圣杯布局与双飞翼布局&quot; class=&quot;headerlink&quot; title=&quot;两种常见布局:圣杯布局与双飞翼布局&quot;&gt;&lt;/a&gt;两种常见布局:圣杯布局与双飞翼布局&lt;/h3&gt;&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;圣杯布局(左中右结构,两边宽度固定,中间自适应)&lt;ul&gt;
&lt;li&gt;左边与右边,使用绝对定位,左边left:0,top:0,右边right:0,top:0,中间使用margin&lt;/li&gt;
&lt;li&gt;两栏布局,左边侧边栏固定,右边主体自使用,左边主体自适应,右边侧边栏固定,左侧边栏固定，右主体自适应,左主体自适应,右侧边栏固定都是圣杯布局，解决办法:使用绝对定位,如上,还有就是浮动布局,弹性盒模型也可以解决&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例代码如下:&lt;br&gt;&lt;code&gt;使用绝对定位实现圣杯布局&lt;/code&gt;&lt;br&gt;&lt;code&gt;html结构代码&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;div class=&amp;quot;left&amp;quot;&amp;gt;左边&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;div class=&amp;quot;center&amp;quot;&amp;gt;中间&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;div class=&amp;quot;right&amp;quot;&amp;gt;右边&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;css示例代码&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt; .left&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    width:200px;        /*两边固定宽度,中间自适应*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    height:600px;       /*高度可以不可,由内容填充*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    position:absolute;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    left:0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    top:0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    background:red;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.center&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    width:100%;        /*宽度不固定*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    background:orange;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    height:600px; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    margin:0 200px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.right&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   width:200px;       /*两边固定宽度,中间自适应*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   height:600px;      /*高度可以不可,由内容填充*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   position:absolute;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   right:0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   top:0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   background:green;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;实例效果图所下所示&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;绝对定位实现圣杯布局.gif&lt;/p&gt;
&lt;p&gt;&lt;code&gt;使用浮动实现圣杯布局显示效果&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;* 利用浮动布局&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*  要注意位置不同,实现的效果也会不同,设置了浮动,一定要注意清除浮动&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;示例代码所示&lt;br&gt;&lt;code&gt;html内容结构代码&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;div class=&amp;quot;left w200&amp;quot;&amp;gt;左边&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;div class=&amp;quot;right w200&amp;quot;&amp;gt;右边&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;div class=&amp;quot;center&amp;quot;&amp;gt;中间&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;css层叠样式代码&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt; .w200&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    width:200px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    height:600px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.left&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    float:left;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    background:pink;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.right&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    float:right;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    background:blue;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.center&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    height:600px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    background:red;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    overflow:hidden;  /*清除浮动*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;实现效果如下所示&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;浮动实现圣杯布局.gif&lt;/p&gt;
&lt;p&gt;&lt;code&gt;利用弹性盒模型老版本display:box实现圣杯布局,两边固定,中间自适应&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当你缩放到最小值时,中间的内容会被隐藏,你可以给中间的盒子设置一个最小宽度值即可&lt;br&gt;&lt;code&gt;html结构内容代码&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;div class=&amp;quot;parent&amp;quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;div class=&amp;quot;left w200&amp;quot;&amp;gt;左边&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;div class=&amp;quot;center&amp;quot;&amp;gt;中间&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;div class=&amp;quot;right w200&amp;quot;&amp;gt;右边&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;css层叠样式代码&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.parent&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    width:100%;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:-webkit-box;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    -webkit-box-orient:horizontal;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    /*决定盒子剩余空间的利用对齐方式,center表示居中*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    -webkit-box-pack:center; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    /*firefox*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:-moz-box;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    -moz-box-orient:horizontal;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    -moz-box-pack:center;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    /*opera*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:-o-box;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    -o-box-orient:horizontal;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    -o-box-pack:center;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    /*IE浏览器*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:-ms-box;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    -ms-box-orient:horizontal;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    -ms-box-pack:center;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    /*标准浏览器*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:box;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    box-orient:horizontal;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    box-pack:center;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.w200&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    width:200px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    height:600px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.left&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   background:#abcdef;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.right&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   background:yellow;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.center&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    width:100%;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    background:orange;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    -webkit-box-flex:1;  /*注意的是浏览器前缀一定要加*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    -moz-box-flex:1;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    -ms-box-flex:1;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    -o-box-flex:1;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    box-flex:1;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;实现效果图如下所示&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用弹性盒模型display-box实现圣杯布局.gif&lt;/p&gt;
&lt;p&gt;&lt;code&gt;利用弹性盒模型新版本display:flex实现圣杯布局,两边固定,中间自适应&lt;/code&gt;&lt;br&gt;&lt;code&gt;html内容结构代码&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt; &amp;lt;div class=&amp;quot;parent&amp;quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;div class=&amp;quot;left w200&amp;quot;&amp;gt;左边&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;div class=&amp;quot;center&amp;quot;&amp;gt;中间&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;div class=&amp;quot;right w200&amp;quot;&amp;gt;右边&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;css层叠样式代码&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.parent&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    width:100%;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:-webkit-flex;/*声明弹性盒模型,定义弹性容器*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    -webkit-flex-direction:row; /*row设置主轴方向为水平方向*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   /*决定盒子剩余空间的利用对齐方式,center表示居中*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   -webkit-justify-content:center; /*定义了在当前行上,弹性项目沿主轴如何排布*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   display:flex; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   flex-direction:row;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   justify-content:center;  /*相当于老版本的flex-pack*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   /*firefox*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   display:-moz-flex;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   -moz-direction:row; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   -moz-justify-content:center;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   /*opera*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   display:-o-flex;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   -o-direction:row;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   -o-justify-content:center;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   /*IE浏览器*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   display:-ms-flex;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   -ms-direction:row; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   -ms-justify-content:center;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   /*标准浏览器*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   display:flex;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   flex-direction:row;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   justify-content:center;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.w200&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    width:200px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    height:600px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.left&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    background:red;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.right&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    background:green;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.center&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    width:100%;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    background:pink;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    -webkit-flex-flex:1;  /*注意的是浏览器前缀一定要加*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    -moz-flex-flex:1;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    -ms-flex-flex:1;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    -o-flex-flex:1;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    flex-flex:1;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;实例效果图如下所示&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用display-flex实现圣杯布局.gif&lt;/p&gt;
&lt;p&gt;实例:手机端的淘宝布局,京东上方的搜索栏,一些后台管理系统,什么两边固定,中间自适应结构,左固定,右自适应或者左自适应,右固定等都是圣杯布局的体现,无论是使用绝对定位还是浮动布局,前两者都会破坏文档流,使用定位元素会脱离文档流,浮动会引起一些困扰的bug,比如说忘记清除浮动,设置margin-right,margin:0 auto值都会失效,在移动端布局上,使用弹性盒模型flex,无论是老版本还是新版本,对于这种两列,三列或多列自适应,复杂的布局,用flex布局方式,都是非常强大的,但是要注意兼容性,加各浏览器前缀,不然的会调试半天也会没有效果的，css的书写顺序应是选择渐进增强的方式,从低版本到高版本&lt;br&gt;比如说下面常见移动端示例参考,可借助上面的决定定位,浮动,弹性盒模型等实现下面示例上方的搜索导航部分&lt;br&gt;&lt;code&gt;京东移动端头部搜索栏部分(左中右结构,两边固定,中间自适应)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;京东搜索导航栏.gif&lt;/p&gt;
&lt;p&gt;&lt;code&gt;淘宝移动端头部搜索栏部分(左边固定,右边自适应)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;淘宝搜索导航栏.gif&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;双飞翼布局(等高布局)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;一个盒子的内容变化,同样会影响同级(兄弟)高度变换,实时同步变化&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;p&gt;示例代码如下所示&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;html内容结构代码&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;div class=&amp;quot;wrap&amp;quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;lt;div class=&amp;quot;left&amp;quot;&amp;gt;等高布局等高布局等高布局等高布局等高布局&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;lt;div class=&amp;quot;right&amp;quot;&amp;gt;等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局等高布局&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;css层叠样式代码&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.wrap&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    width:1000px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    margin:0 auto;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    overflow:hidden;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    border:1px solid red&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.left&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    width:300px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    background:red;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    float:left;             /*左浮动*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    padding-bottom:1000px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    margin-bottom:-10000px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.right&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    width:700px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    background:blue;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    float:right;             /*右浮动*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    padding-bottom:1000px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    margin-bottom:-1000px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;实例效果如下所示&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;等高布局.gif&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;总结&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; 本篇主要是围绕着一个元素在页面中如何水平垂直居中,分别对行内元素和块级元素介绍了8种方式元素的水平居中和9种垂直方式元素居中,进而又对一个元素用5种方式实现水平+垂直居中显示,最终常见两种布局,圣杯布局(使用绝对定位,浮动布局,弹性盒模性Flex布局可实现)和双飞翼(等高)布局,其中绝对定位与浮动布局都会破坏元素的文档流,对于一个元素让其水平垂直居中显示很常见,比如说弹框,还有页面上布局,对于块级元素我们往往第一想到的是margin:0 auto,水平居中显示,但是有时却难以想到其他种方法,对于使用绝对定位方式,设置left,top,right,bottom为0,配合margin的使用实现水平垂直居中还是挺巧妙的,同时绝对定位,对于固定宽度高度,用margin负半值的方法实现水平垂直居中显示也是一种很好的方式,还有display:table的方式实现垂直居中显示,以及transform结合绝对定位实现元素水平居中显示,最为强大的是弹性盒模型Flex布局,无论是老版本display:box,还是新版本display:flex对父元素设置该属性,同时设置子元素的排列方式,也可以对子元素进行box-flex进行设置,能够很好的达到水平垂直居中显示,自适应,但是注意该属性的兼容性,针对不同的浏览器,要加上浏览器的前缀,否则会失效,对于元素水平垂直居中显示可以优先考虑css的方式解决(如上方法),对于复杂的实例,也可以考虑同上文中用js的方式去实现元素的水平垂直居中显示&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;以下是本篇提点概要&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;水平居中&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;方法1&lt;/code&gt;：若是行内元素,给其父级元素设置&lt;code&gt;text-align:center&lt;/code&gt;,可以实现行内元素水平居中&lt;/li&gt;
&lt;li&gt;&lt;code&gt;方法2&lt;/code&gt;:若是块级元素,要想实现水平居中:&lt;code&gt;margin:0 auto&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;方法3&lt;/code&gt;:若是子元素有浮动,为了让子元素水平居中,则可以让父元素宽度设置为&lt;code&gt;fit-content&lt;/code&gt;,&lt;code&gt;并且配合margin:0 auto&lt;/code&gt;,&lt;code&gt;注意&lt;/code&gt;这个属性值&lt;code&gt;fit-content&lt;/code&gt;配上&lt;code&gt;margin:0 auto&lt;/code&gt;才会让其水平居中,目前只有chrome,firfox,Opera浏览器支持该属性值,并且只能实现水平居中,无法实现垂直居中,&lt;code&gt;也没有height:fit-content&lt;/code&gt;,该属性,即使设置了也不生效&lt;/li&gt;
&lt;li&gt;&lt;code&gt;方法4&lt;/code&gt; 使用flex布局,老版本:设置父元素&lt;code&gt;display:box;&lt;/code&gt;,&lt;code&gt;box-orient:horizontal;&lt;/code&gt;,&lt;code&gt;box-pack:center;&lt;/code&gt;实现元素水平居中&lt;/li&gt;
&lt;li&gt;. 方法5 使用flex,新版本:设置父元素&lt;code&gt;display:flex&lt;/code&gt;),&lt;code&gt;flex-direction:row&lt;/code&gt;(设置主轴方向为水平方向),&lt;code&gt;just-content:center&lt;/code&gt;(规定主轴方向富裕空间的管理,所有子元素的居中,对应老版本的box-pack)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;方法6&lt;/code&gt; 使用css3中新增的transform属性,子元素设置离x轴50%&lt;/li&gt;
&lt;li&gt;&lt;code&gt;方法7&lt;/code&gt; 元素使用绝对定位方式,left:50%,以及margin的负半值方式,margin-left:-宽度的一半&lt;/li&gt;
&lt;li&gt;&lt;code&gt;方法8&lt;/code&gt; 子元素使用绝对定位方式,&lt;code&gt;position:absolute&lt;/code&gt;以及&lt;code&gt;top&lt;/code&gt;,&lt;code&gt;left:0&lt;/code&gt;,&lt;code&gt;right:0&lt;/code&gt;;&lt;code&gt;bottom:0&lt;/code&gt;,属性值设置为0,&lt;code&gt;margin:0 auto&lt;/code&gt;;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;垂直居中&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;方法1&lt;/code&gt;,若是单行文本内容,可以设置&lt;code&gt;line-height&lt;/code&gt;等于父元素的高度,注意这是定高的，也就是高度是固定不变的,这种方法只适用于单行文本的元素才适用,比如块级元素里面文本,图片&lt;/li&gt;
&lt;li&gt;&lt;code&gt;方法2&lt;/code&gt;，若是行内块级元素，也就是给它设置了&lt;code&gt;display:inline-block&lt;/code&gt;属性,这种方法针对一些&lt;code&gt;img&lt;/code&gt;等行内元素,比较常用,&lt;code&gt;vertical-align:middle&lt;/code&gt;和一个伪元素内容块处于容器的中央,&lt;code&gt;注意&lt;/code&gt;要给这个伪类高度设置高度100%，此方法在IE6下失效,IE,7,8,9有用,但是又在IE10,11又失效(IEText测的)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;方法3&lt;/code&gt;,子元素可用&lt;code&gt;vertical-align:middle&lt;/code&gt;(使元素垂直对齐),和&lt;code&gt;display:tab-cell&lt;/code&gt;(让元素以表格形式渲染),&lt;code&gt;父元素使用display:table&lt;/code&gt;,让元素以表格的形式渲染&lt;/li&gt;
&lt;li&gt;&lt;code&gt;方法4&lt;/code&gt;,使用&lt;code&gt;Flex布局&lt;/code&gt;,&lt;code&gt;display:box(声明弹性盒模型)&lt;/code&gt;,&lt;code&gt;box-orient:vertical;&lt;/code&gt;(父元素设置,用来确定子元素的方向,垂直方向向的,竖着的,horizontal是横着的),&lt;code&gt;box-pack:center;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;方法5&lt;/code&gt;,使用Flex布局,&lt;code&gt;display:flex(声明弹性盒模型)&lt;/code&gt;,&lt;code&gt;align-items:center&lt;/code&gt;(元素在侧轴中间位置,富裕空间在侧轴两侧)&lt;code&gt;flex-direction:coluumn&lt;/code&gt;(设置主轴方向为垂直方向)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;方法6&lt;/code&gt;,设置父元素相对定位&lt;code&gt;(position:relative)&lt;/code&gt;,子元素设置绝对定位&lt;code&gt;position:absolute&lt;/code&gt;,&lt;code&gt;top:50%&lt;/code&gt;,&lt;code&gt;height高度固定,利用margin负半值的方式&lt;/code&gt;，让元素垂直居中&lt;/li&gt;
&lt;li&gt;&lt;code&gt;方法7&lt;/code&gt;,设置父元素相对定位(position:relative),子元素设置绝对定位,margin:auto 0,高度固定,left | top | right | bottom都设置为0，但是在IE8低版本浏览器以下失效&lt;/li&gt;
&lt;li&gt;&lt;code&gt;方法8&lt;/code&gt;,需要在&lt;code&gt;居中元素前面放一个空块级元素&lt;/code&gt;(比如div)即可,然后&lt;code&gt;设置这个div的高度为50%,margin-bottom为元素高度的一半&lt;/code&gt;,而且&lt;code&gt;居中元素需要清除浮动&lt;/code&gt;,需要注意的是,使用这种方法,`如果你的居中元素是放在body中的话,需要给html,body设置一个height:100%的属性&lt;/li&gt;
&lt;li&gt;&lt;code&gt;方法9&lt;/code&gt;:使用内边距的方式使其垂直居中&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;水平+垂直居中&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;若是文本图片,则可以使用&lt;code&gt;line-height:高度&lt;/code&gt;；&lt;code&gt;text-align:center&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;若是定宽定高,&lt;code&gt;使用绝对定位position:absolute,left:50%,top:50%,使用margin负半值&lt;/code&gt;进行元素的水平垂直居中显示&lt;/li&gt;
&lt;li&gt;&lt;code&gt;绝对定位absolute+margin:auto&lt;/code&gt;,同时,&lt;code&gt;top:0&lt;/code&gt;;&lt;code&gt;left:0&lt;/code&gt;;&lt;code&gt;right:0&lt;/code&gt;,&lt;code&gt;bottom:0&lt;/code&gt;这种方式使一个元素水平垂直居中也是比较常见的&lt;/li&gt;
&lt;li&gt;使用js动态计算使其元素水平垂直居中&lt;/li&gt;
&lt;li&gt;使用jQuery实现元素的水平垂直居中&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;两种常见布局:圣杯布局(两边宽度固定,中间自适应)与双飞翼(等高)布局&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;圣杯(两边宽度固定,中间自适应)布局&lt;ul&gt;
&lt;li&gt;使用绝对定位实现圣杯布局&lt;/li&gt;
&lt;li&gt;使用浮动实现圣杯布局&lt;/li&gt;
&lt;li&gt;使用弹性盒模型Flex布局display-box实现圣杯布局&lt;/li&gt;
&lt;li&gt;利用弹性盒模型新版本display:flex实现圣杯布局&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;双飞翼(等高)布局&lt;ul&gt;
&lt;li&gt;一个盒子的内容变化,同样会影响同级(兄弟)高度变换,实时同步变化,如上代码示例所示&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt;title: 如何实现元素的水平垂直居中&lt;br&gt;date: 2017-09-05&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.jianshu.com/p/09ece194956a&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http:
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2017/09/05/grid%20%E7%BD%91%E6%A0%BC%E5%B8%83%E5%B1%80/"/>
    <id>http://yoursite.com/2017/09/05/grid 网格布局/</id>
    <published>2017-09-05T07:06:36.000Z</published>
    <updated>2017-09-05T07:17:09.000Z</updated>
    
    <content type="html">&lt;hr&gt;
&lt;p&gt;title: grid网格布局&lt;br&gt;date: 2017-09-05&lt;/p&gt;
&lt;h3 id=&quot;一、定义&quot;&gt;&lt;a href=&quot;#一、定义&quot; class=&quot;headerlink&quot; title=&quot;一、定义&quot;&gt;&lt;/a&gt;一、定义&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;简介&lt;/strong&gt;&lt;br&gt;CSS网格布局（又称“网格”），是一种二维网格布局系统。CSS在处理网页布局方面一直做的不是很好。一开始我们用的是table（表格）布局，然后用float(浮动)，position（定位）和inline-block（行内块）布局，但是这些方法本质上是hack，遗漏了很多功能，例如垂直居中。后来出了&lt;a href=&quot;http://peale.cn/2016/11/30/2016_11_30_flex/#more&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;flexbox(盒子布局)&lt;/a&gt;，解决了很多布局问题，但是它仅仅是一维布局，而不是复杂的二维布局，实际上它们（flexbox与grid）能很好的配合使用。Grid布局是第一个专门为解决布局问题而创建的CSS模块,2012年11月06日成立&lt;a href=&quot;https://www.w3.org/TR/css3-grid-layout/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;草案&lt;/a&gt;。作者：peale链接：&lt;a href=&quot;http://www.jianshu.com/p/d183265a8dad來源：简书著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jianshu.com/p/d183265a8dad來源：简书著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;初步了解和浏览器支持&lt;/strong&gt;&lt;br&gt;使用Grid布局非常简单，你只需要给容器（container）定义：display:grid，并设置列（grid-template-columns）和 行（grid-template-rows）的大小，然后用grid-column和grid-row定义容器子元素（grid-item项目）的位置。与flexbox布局类似，一开始项目的排列顺序并不重要，可以放置在容器的任何位置，这也使得你非常容易通过媒体查询重新排列你的项目。想象一下，当你定义整个页面的布局时，你只需要几行CSS就可以完成页面重排以便适应各种屏幕宽度，这得有多么神奇！&lt;br&gt;好东西总是来的晚，不要焦躁，不要沮丧。活好每一天，自然就等到了。&lt;br&gt;目前浏览器还不支持Grid布局，IE10和IE11支持老的语法。如果你想体验Grid布局的强大，推荐使用开通过“体验新功能”的Chrome, Opera 或 Firefox， Chrome:打开浏览器，输入chrome://flags，找到”experimental web platform features”，启用并重启浏览器；Opera：输入opera://flags，与Chrome一样；Firefox:输入layout.css.grid.enabled。作者：peale链接：&lt;a href=&quot;http://www.jianshu.com/p/d183265a8dad來源：简书著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jianshu.com/p/d183265a8dad來源：简书著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;浏览器支持情况：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Chrome&lt;/th&gt;
&lt;th&gt;Safari&lt;/th&gt;
&lt;th&gt;Firefox&lt;/th&gt;
&lt;th&gt;Opera&lt;/th&gt;
&lt;th&gt;IE&lt;/th&gt;
&lt;th&gt;Android/iOS&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;29+ (Behind flag)&lt;/td&gt;
&lt;td&gt;Not supported&lt;/td&gt;
&lt;td&gt;40+ (Behind flag)&lt;/td&gt;
&lt;td&gt;28+ (Behind flag)&lt;/td&gt;
&lt;td&gt;10+ (Old syntax)&lt;/td&gt;
&lt;td&gt;Not supported&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;重要术语&lt;/strong&gt;&lt;br&gt;在深入了解Grid布局概念之前，我们先了解一些术语。因为这些术语在概念上很相似，如果你不记住Grid定义的含义，会很容易将它们混淆，但是不用担心，这里术语很少。&lt;/p&gt;
&lt;p&gt;1.网格容器（Grid Container）&lt;br&gt;元素应用display:grid，它是其所有网格项的父元素。下面例子container就是网格容器。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;lt;div class=&amp;quot;item item-1&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;lt;div class=&amp;quot;item item-2&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;lt;div class=&amp;quot;item item-3&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2.网格项（Grid Item）&lt;br&gt;网格容器的子元素，下面的item元素是网格项，但sub-item不是。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;lt;div class=&amp;quot;item&amp;quot;&amp;gt;&amp;lt;/div&amp;gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;lt;div class=&amp;quot;item&amp;quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;p class=&amp;quot;sub-item&amp;quot;&amp;gt;&amp;lt;/p&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;lt;div class=&amp;quot;item&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;3.网格线（Grid Line）&lt;br&gt;组成网格线的分界线。它们可以是列网格线（column grid lines），也可以是行网格线（row grid lines）并且居于行或列的任意一侧，下面黄色线就是列网格线。&lt;/p&gt;
&lt;p&gt;grid lines&lt;/p&gt;
&lt;p&gt;4.网格轨道（Grid Track）&lt;br&gt;两个相邻的网格线之间为网格轨道。你可以认为它们是网格的列或行，下面在第二个和第三个网格线之间的黄色部分为网格轨道。&lt;/p&gt;
&lt;p&gt;Grid Track&lt;/p&gt;
&lt;p&gt;5.网格单元（Grid Cell）&lt;br&gt;两个相邻的列网格线和两个相邻的行网格线组成的是网格单元，它是最小的网格单元。下面行网格线1（row grid lines 1）、行网格线2（row grid lines 2）和列网格线1（column grid lines 1）、列网格线2（column grid lines2）组成的黄色区域为网格单元。&lt;/p&gt;
&lt;p&gt;Grid Cell&lt;/p&gt;
&lt;p&gt;6.网格区（Grid Area）&lt;br&gt;网格区是由任意数量网格单元组成，下面行网格线1（row grid lines 1）、行网格线3（row grid lines 3）和列网格线1（column grid lines 1）、列网格线3（column grid lines3）组成的黄色区域为网格区。&lt;/p&gt;
&lt;p&gt;Grid Area&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;设置在网格容器上的属性&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;display&lt;/li&gt;
&lt;li&gt;grid-template-columns&lt;/li&gt;
&lt;li&gt;grid-template-rows&lt;/li&gt;
&lt;li&gt;grid-template-areas&lt;/li&gt;
&lt;li&gt;grid-column-gap&lt;/li&gt;
&lt;li&gt;grid-row-gap&lt;/li&gt;
&lt;li&gt;grid-gap&lt;/li&gt;
&lt;li&gt;justify-items&lt;/li&gt;
&lt;li&gt;align-items&lt;/li&gt;
&lt;li&gt;justify-content&lt;/li&gt;
&lt;li&gt;align-content&lt;/li&gt;
&lt;li&gt;grid-auto-columns&lt;/li&gt;
&lt;li&gt;grid-auto-rows&lt;/li&gt;
&lt;li&gt;grid-auto-flow&lt;/li&gt;
&lt;li&gt;grid&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;\1. display: grid | inline-grid | subgrid;&lt;/p&gt;
&lt;p&gt;属性值：&lt;br&gt;grid: 生成块级网格&lt;br&gt;inline-grid: 生成行内网格&lt;br&gt;subgrid: 如果网格容器本身是网格项（嵌套网格容器），此属性用来继承其父网格容器的列、行大小。&lt;/p&gt;
&lt;p&gt;注：当元素设置了网格布局，column、float、clear、vertical-align属性无效。&lt;/p&gt;
&lt;p&gt;\2. grid-template-columns: &lt;track-size&gt; … | &lt;line-name&gt; &lt;track-size&gt; … ;&lt;br&gt;​     grid-template-rows: &lt;track-size&gt; … | &lt;line-name&gt; &lt;track-size&gt; … ;&lt;/track-size&gt;&lt;/line-name&gt;&lt;/track-size&gt;&lt;/track-size&gt;&lt;/line-name&gt;&lt;/track-size&gt;&lt;/p&gt;
&lt;p&gt;设置行和列的大小，在行轨道或列轨道两边是网格线。&lt;/p&gt;
&lt;p&gt;属性值：&lt;br&gt;track-size: 轨道大小，可以使用css长度，百分比或用分数（用fr单位）。&lt;br&gt;line-name: 网格线名字，你可以选择任何名字。&lt;/p&gt;
&lt;p&gt;例子：&lt;br&gt;当你设置行或列大小为auto时，网格会自动分配空间和网格线名称。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.container&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:grid;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grid-template-columns: 40px 50px auto 50px 40px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grid-template-rows: 25% 100px auto;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;grid-numbers&lt;/p&gt;
&lt;p&gt;你也可以给网格线定义名字，注意名字需要写在[]里面。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.container&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:grid;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grid-template-columns: [first] 40px [line2] 50px [line3] auto [col4-start] 50px [five] 40px [end];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grid-template-rows: [row1-start] 25% [row1-end] 100px [third-line] auto [last-line];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;grid-names&lt;/p&gt;
&lt;p&gt;每条网格线可以有多个名字，例如上面行的第二条线有两个名字，分别是row1-end和row2-start。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.container&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:grid;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grid-template-rows: [row1-start] 25% [row1-end row2-start] 25% [row2-end];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果你定义包含重复部分，可以使用repeat()简化。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.container&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:grid;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grid-template-columns: repeat(3, 20px [col-start]) 5%;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面等同于下面：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.container&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:grid;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grid-template-columns: 20px [col-start] 20px [col-start] 20px [col-start] 5%;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;用fr单位可以将容器分为几等份，例如下面分成三等份。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.container&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:grid;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grid-template-columns: 1fr 1fr 1fr;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果fr单位和实际值一起使用，设置fr的行或列将分(除了实际值)剩余部分。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.container&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:grid;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grid-template-columns: 1fr 50px 1fr 1fr;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;3.grid-template-areas&lt;/p&gt;
&lt;p&gt;通过获取网格项中的grid-area属性值（名称），来定义网格模版。重复网格区（grid-area）名称将跨越网格单元格，‘.’代表空网格单元。&lt;/p&gt;
&lt;p&gt;属性值：&lt;br&gt;grid-area-name: 网格项的grid-area属性值（名字）&lt;br&gt;‘.’ : 空网格单元&lt;br&gt;none: 不定义网格区域&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.item-a&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  grid-area: header;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.item-b&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  grid-area: main;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.item-c&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  grid-area: sidebar;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.item-d&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  grid-area: footer;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.container&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:grid;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grid-template-columns: 50px 50px 50px 50px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grid-template-rows: auto;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grid-template-areas: &amp;quot;header header header header&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                         &amp;quot;main main . sidebar&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                         &amp;quot;footer footer footer footer&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面代码示例会创建四列三行网格，第一行将是header，第二行前两个网格单元是main部分、第三个为空网格单元、第四个为sliderbar，第三行是footer。&lt;/p&gt;
&lt;p&gt;grid-template-areas&lt;/p&gt;
&lt;p&gt;\4. grid-column-gap：&lt;line-size&gt;; 和 grid-row-gap: &lt;line-size&gt; ;&lt;/line-size&gt;&lt;/line-size&gt;&lt;/p&gt;
&lt;p&gt;网格单元间距。&lt;/p&gt;
&lt;p&gt;属性值：&lt;br&gt;line-size: 网格线间距,设置单位值。&lt;/p&gt;
&lt;p&gt;例子：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.container&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:grid;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grid-template-columns: 100px 50px 100px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grid-template-rows: 80px auto 80px; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grid-column-gap: 10px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grid-row-gap: 15px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;grid-column-row-gap&lt;/p&gt;
&lt;p&gt;注：间隔仅仅作用在网格单元之间，不作用在容器边缘。&lt;/p&gt;
&lt;p&gt;\5. grid-gap：&lt;grid-column-gap&gt; &lt;grid-row-gap&gt;;&lt;/grid-row-gap&gt;&lt;/grid-column-gap&gt;&lt;/p&gt;
&lt;p&gt;是grid-column-gap 和 grid-row-gap简写。&lt;/p&gt;
&lt;p&gt;例子：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.container&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:grid;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grid-template-columns: 100px 50px 100px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grid-template-rows: 80px auto 80px; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grid-gap: 10px 15px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注：如果只设置一个值，那么grid-column-gap 和 grid-row-gap都为那个值。&lt;/p&gt;
&lt;p&gt;\6. justify-items: start | end | center | stretch（默认） ;&lt;/p&gt;
&lt;p&gt;垂直于列网格线对齐，适用于网格容器里的所有网格项。&lt;/p&gt;
&lt;p&gt;属性值：&lt;br&gt;start:   左对齐。&lt;br&gt;end:     右对齐。&lt;br&gt;center:  居中对齐。&lt;br&gt;stretch: 填满（默认）。&lt;/p&gt;
&lt;p&gt;例子：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.container&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:grid;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    justify-items: start;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;grid-justify-items-start&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.container&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:grid;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    justify-items: end;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;grid-justify-items-end&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.container&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:grid;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    justify-items: center;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;grid-justify-items-center&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.container&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:grid;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    justify-items: stretch;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;grid-justify-items-stretch&lt;/p&gt;
&lt;p&gt;\7. align-items: start | end | center | stretch ;&lt;/p&gt;
&lt;p&gt;垂直于行网格线对齐，适用于网格容器里的所有网格项。&lt;/p&gt;
&lt;p&gt;属性值：&lt;br&gt;start：  顶部对齐。&lt;br&gt;end：    底部对齐。&lt;br&gt;center： 居中对齐。&lt;br&gt;stretch：填满（默认）。&lt;/p&gt;
&lt;p&gt;例子：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.container&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:grid;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    align-items: start;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;grid-align-items-start&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.container&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:grid;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    align-items: end;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;grid-align-items-end&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.container&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:grid;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    align-items: center;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;grid-align-items-center&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.container&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:grid;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    align-items: stretch;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;grid-align-items-stretch&lt;/p&gt;
&lt;p&gt;\8. justify-content: start | end | center | stretch | space-around | space-between | space-evenly ;    &lt;/p&gt;
&lt;p&gt;如果用像px非弹性单位定义的话，总网格区域大小有可能小于网格容器，这时候你可以设置网格的对齐方式（垂直于列网格线对齐）。&lt;/p&gt;
&lt;p&gt;属性值：&lt;br&gt;start: 左对齐。&lt;br&gt;end: 右对齐。&lt;br&gt;center: 居中对齐。&lt;br&gt;stretch: 填满网格容器。&lt;br&gt;space-around: 网格项两边间距相等，网格项之间间隔是单侧的2倍。&lt;br&gt;space-between: 两边对齐，网格项之间间隔相等。&lt;br&gt;space-evenly: 网格项间隔相等。&lt;/p&gt;
&lt;p&gt;例子：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.container&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:grid;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    justify-content: start;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;grid-justify-content-start&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.container&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:grid;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    justify-content: end;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;grid-justify-content-end&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.container&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:grid;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    justify-content: center;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;grid-justify-content-center&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.container&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:grid;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    justify-content: stretch;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;grid-justify-content-stretch&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.container&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:grid;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    justify-content: space-around;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;grid-justify-content-space-around&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.container&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:grid;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    justify-content: space-between;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;grid-justify-content-space-between&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.container&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:grid;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    justify-content: space-evenly;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;grid-justify-content-space-evenly&lt;/p&gt;
&lt;p&gt;\9. align-content: start | end | center | stretch | space-around | space-between | space-evenly ;  &lt;/p&gt;
&lt;p&gt;如果用像px非弹性单位定义的话，总网格区域大小有可能小于网格容器，这时候你可以设置网格的对齐方式（垂直于行网格线对齐）。&lt;/p&gt;
&lt;p&gt;属性值：&lt;br&gt;start: 顶部对齐。&lt;br&gt;end: 底部对齐。&lt;br&gt;center: 居中对齐。&lt;br&gt;stretch: 填满网格容器。&lt;br&gt;space-around: 网格项两边间距相等，网格项之间间隔是单侧的2倍。&lt;br&gt;space-between: 两边对齐，网格项之间间隔相等。&lt;br&gt;space-evenly: 网格项间隔相等。&lt;/p&gt;
&lt;p&gt;例子：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.container&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:grid;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    align-content: start; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;grid-align-content-start&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.container&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:grid;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    align-content: end; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;grid-align-content-end&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.container&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:grid;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    align-content: center; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;grid-align-content-center&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.container&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:grid;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    align-content: stretch; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;grid-align-content-stretch&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.container&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:grid;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    align-content: space-around; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;grid-align-content-space-around&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.container&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:grid;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    align-content: space-between; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;grid-align-content-space-between&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.container&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:grid;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    align-content: space-evenly; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;grid-align-content-space-evenly&lt;/p&gt;
&lt;p&gt;\10. grid-auto-columns: &lt;track-size&gt; … ; 和 grid-auto-rows: &lt;track-size&gt; … ;&lt;/track-size&gt;&lt;/track-size&gt;&lt;/p&gt;
&lt;p&gt;自动生成隐式网格轨道（列和行），当你定位网格项超出网格容器范围时，将自动创建隐式网格轨道。&lt;/p&gt;
&lt;p&gt;属性值：&lt;br&gt;track-size: 网格轨道大小,可以是固定值，百分比或者是分数（fr单位）。&lt;/p&gt;
&lt;p&gt;为了说明隐式网格轨道是怎么创建的，我们先看下面列子：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.container&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:grid;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grid-template-columns: 60px 60px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grid-template-rows: 90px 90px&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;grid-auto&lt;/p&gt;
&lt;p&gt;这是2✖️2的网格，但是我们来用grid-column 和 grid-row给网格项定位如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.item-a&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grid-column: 1 / 2;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grid-row: 2 / 3;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.item-b&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grid-column: 5 / 6;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grid-row: 2 / 3;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;implicit-tracks&lt;/p&gt;
&lt;p&gt;我们可以看出，网格项item-b定位在第五根列网格线（column line 5 ）和第六根列网格线（column line 6 ）之间。但是我们网格容器根本不存在这两条网格线，所以就用两个0宽度来填充。在这里我们可以用网格自动行（grid-auto-rows）和网格自动列（grid-auto-columns）来定义这些隐式轨道宽度。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.container&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display:grid;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grid-auto-columns: 60px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;implicit-tracks-with-widths&lt;/p&gt;
&lt;p&gt;\11. grid-auto-flow : row（默认） | column | dense ;&lt;/p&gt;
&lt;p&gt;在没有设置网格项的位置时，这个属性控制网格项怎样排列。&lt;/p&gt;
&lt;p&gt;属性值：&lt;br&gt;row: 按照行依次从左到右排列。&lt;br&gt;column: 按照列依次从上倒下排列。&lt;br&gt;dense: 按先后顺序排列。&lt;/p&gt;
&lt;p&gt;来看看下面结构：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;section class=&amp;quot;container&amp;quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;div class=&amp;quot;item-a&amp;quot;&amp;gt;item-a&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;div class=&amp;quot;item-b&amp;quot;&amp;gt;item-b&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;div class=&amp;quot;item-c&amp;quot;&amp;gt;item-c&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;div class=&amp;quot;item-d&amp;quot;&amp;gt;item-d&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;div class=&amp;quot;item-e&amp;quot;&amp;gt;item-e&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/section&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;下面定义5列2行网格，同时定义grid-auto-flow：row。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.container&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display: grid;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grid-template-columns: 60px 60px 60px 60px 60px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grid-template-rows: 30px 30px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grid-auto-flow: row;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;像下面布局网格项。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.item-a&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grid-column: 1;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grid-row: 1 / 3;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.item-e&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grid-column: 5;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grid-row: 1 / 3;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;由于我们设置了grid-auto-flow：row，item-b、item-c和item-d在行上是从左到右排列，如下：&lt;/p&gt;
&lt;p&gt;grid-auto-flow-row&lt;/p&gt;
&lt;p&gt;如果我们设置 grid-auto-flow: column;结果如下：&lt;/p&gt;
&lt;p&gt;grid-auto-flow-column&lt;/p&gt;
&lt;p&gt;\12. grid: none | &lt;grid-template-rows&gt; / &lt;grid-template-columns&gt; | &lt;grid-auto-flow&gt; [&lt;grid-auto-rows&gt; [ / &lt;grid-auto-columns&gt;] ];&lt;/grid-auto-columns&gt;&lt;/grid-auto-rows&gt;&lt;/grid-auto-flow&gt;&lt;/grid-template-columns&gt;&lt;/grid-template-rows&gt;&lt;/p&gt;
&lt;p&gt;是一种简写形式，设置网格容器所有属性。&lt;/p&gt;
&lt;p&gt;属性值：&lt;br&gt;none: 设置为所有属性的默认值。&lt;/p&gt;
&lt;p&gt;&lt;grid-template-rows&gt; / &lt;grid-template-columns&gt;: 设置行和列的值，其他属性为默认值。&lt;/grid-template-columns&gt;&lt;/grid-template-rows&gt;&lt;/p&gt;
&lt;p&gt;&lt;grid-auto-flow&gt; [ &lt;grid-auto-rows&gt; [ / &lt;grid-auto-columns&gt;] ] : 设置网格自动流、网格自动行、网格自动列的值，其他未设置则为默认值。&lt;/grid-auto-columns&gt;&lt;/grid-auto-rows&gt;&lt;/grid-auto-flow&gt;&lt;/p&gt;
&lt;p&gt;例子1：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.container&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grid: 200px auto / 1fr auto 1fr;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;等同于&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.container&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grid-template-rows: 200px auto;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grid-template-columns: 1fr auto 1fr;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grid-template-areas: none;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;例子2：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.container&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grid: column 1fr / auto;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;等同于&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.container&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grid-auto-flow: column;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grid-auto-rows: 1fr;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grid-auto-columns: auto;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;设置在网格项上的属性&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;grid-column-start&lt;/li&gt;
&lt;li&gt;grid-column-end&lt;/li&gt;
&lt;li&gt;grid-row-start&lt;/li&gt;
&lt;li&gt;grid-row-end&lt;/li&gt;
&lt;li&gt;grid-column&lt;/li&gt;
&lt;li&gt;grid-row&lt;/li&gt;
&lt;li&gt;grid-area&lt;/li&gt;
&lt;li&gt;justify-self&lt;/li&gt;
&lt;li&gt;align-self&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;\1. grid-column-start: &lt;number&gt; | &lt;name&gt; | span &lt;number&gt; | span &lt;name&gt; | auto ;&lt;br&gt;​            grid-column-end: &lt;number&gt; | &lt;name&gt; | span &lt;number&gt; | span &lt;name&gt; | auto ;&lt;br&gt;​             grid-row-start: &lt;number&gt; | &lt;name&gt; | span &lt;number&gt; | span &lt;name&gt; | auto ;&lt;br&gt;​             grid-row-end: &lt;number&gt; | &lt;name&gt; | span &lt;number&gt; | span &lt;name&gt; | auto ;&lt;/name&gt;&lt;/number&gt;&lt;/name&gt;&lt;/number&gt;&lt;/name&gt;&lt;/number&gt;&lt;/name&gt;&lt;/number&gt;&lt;/name&gt;&lt;/number&gt;&lt;/name&gt;&lt;/number&gt;&lt;/name&gt;&lt;/number&gt;&lt;/name&gt;&lt;/number&gt;&lt;/p&gt;
&lt;p&gt;通过网格线来定义网格项的位置。grid-column-start、grid-row-start定义网格项的开始位置，grid-column-end、grid-row-end定义网格项的结束位置。&lt;/p&gt;
&lt;p&gt;属性值：&lt;br&gt;line: 指定带编号或者名字的网格线。&lt;br&gt;span &lt;number&gt;: 跨越轨道的数量。&lt;br&gt;span &lt;name&gt;: 跨越轨道直到对应名字的网格线。&lt;br&gt;auto: 自动展示位置，默认跨度为1。&lt;/name&gt;&lt;/number&gt;&lt;/p&gt;
&lt;p&gt;例子：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.item-a&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  grid-column-start: 2;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  grid-column-end: five;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  grid-row-start: row1-start&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  grid-row-end: 3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;grid-start-end-a&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.item-b&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  grid-column-start: 1;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  grid-column-end: span col4-start;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  grid-row-start: 2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  grid-row-end: span 2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;grid-start-end-a&lt;/p&gt;
&lt;p&gt;注：如果未声明grid-column-end或grid-row-end，默认将跨越一个轨道。项目也可以重叠，设置z-index来确定堆叠顺序。&lt;/p&gt;
&lt;p&gt;\2. grid-column: &lt;start-line&gt; / &lt;end-line&gt; | &lt;start-line&gt; / span &lt;value&gt; ;&lt;br&gt;​             grid-row: &lt;start-line&gt; / &lt;end-line&gt; | &lt;start-line&gt; / span &lt;value&gt; ;&lt;/value&gt;&lt;/start-line&gt;&lt;/end-line&gt;&lt;/start-line&gt;&lt;/value&gt;&lt;/start-line&gt;&lt;/end-line&gt;&lt;/start-line&gt;&lt;/p&gt;
&lt;p&gt;是 grid-column-start、grid-column-end 和 grid-row-start、grid-row-end 的简写。&lt;/p&gt;
&lt;p&gt;例子：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.item-c&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  grid-column: 3 / span 2;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  grid-row: third-line / 4;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;grid-start-end-c&lt;/p&gt;
&lt;p&gt;\3. grid-area: &lt;name&gt; | &lt;row-start&gt; / &lt;column-start&gt; / &lt;row-end&gt; / &lt;column-end&gt; ;&lt;/column-end&gt;&lt;/row-end&gt;&lt;/column-start&gt;&lt;/row-start&gt;&lt;/name&gt;&lt;/p&gt;
&lt;p&gt;定义网格项名字，以便创建模块（容器属性grid-template-areas来定义模块）。&lt;/p&gt;
&lt;p&gt;属性值：&lt;br&gt;name: 项目名子。&lt;/p&gt;
&lt;p&gt;&lt;row-start&gt; / &lt;column-start&gt; / &lt;row-end&gt; / &lt;column-end&gt;: 可以是数字或网格线名字。&lt;/column-end&gt;&lt;/row-end&gt;&lt;/column-start&gt;&lt;/row-start&gt;&lt;/p&gt;
&lt;p&gt;例子：&lt;br&gt;定义网格项名字：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.item-d&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  grid-area: header&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通过网格线定位网格项：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.item-d&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  grid-area: 1 / col4-start / last-line / 6 ;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;grid-start-end-d&lt;/p&gt;
&lt;p&gt;\4. justify-self:  justify-self: start | end | center | stretch;&lt;/p&gt;
&lt;p&gt;定义单个网格项垂直于列网格线的对齐方式。&lt;/p&gt;
&lt;p&gt;属性值：&lt;br&gt;start:   网格区域左对齐。&lt;br&gt;end:     网格区域右对齐。&lt;br&gt;center:  网格区域居中。&lt;br&gt;stretch: 网格区域填满。&lt;/p&gt;
&lt;p&gt;例子：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.item-a&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  justify-self: start;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;grid-justify-self-start&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.item-a&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  justify-self: end;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;grid-justify-self-end&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.item-a&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  justify-self: center;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;grid-justify-self-center&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.item-a&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  justify-self: stretch;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;grid-justify-self-stretch&lt;/p&gt;
&lt;p&gt;提示：也可以在容器上设置justify-items，达到全部网格项对齐。&lt;/p&gt;
&lt;p&gt;\5. align-self: start | end | center | stretch;&lt;/p&gt;
&lt;p&gt;定义单个网格项垂直于行网格线的对齐方式。&lt;/p&gt;
&lt;p&gt;属性值：&lt;br&gt;start:   网格区域顶部对齐。&lt;br&gt;end:     网格区域底部对齐。&lt;br&gt;center:  网格区域居中。&lt;br&gt;stretch: 网格区域填满。&lt;/p&gt;
&lt;p&gt;例子：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.item-a&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  align-self: start;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;grid-align-self-start&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.item-a&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  align-self: end;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;grid-align-self-end&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.item-a&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  align-self: center;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;grid-align-self-center&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.item-a&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  align-self: stretch;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;grid-align-self-stretch&lt;/p&gt;
&lt;p&gt;提示：也可以在容器上设置align-items，达到全部网格项对齐。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt;title: grid网格布局&lt;br&gt;date: 2017-09-05&lt;/p&gt;
&lt;h3 id=&quot;一、定义&quot;&gt;&lt;a href=&quot;#一、定义&quot; class=&quot;headerlink&quot; title=&quot;一、定义&quot;&gt;&lt;/a&gt;一、定义&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;简介&lt;/st
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>前端编辑器常用插件</title>
    <link href="http://yoursite.com/2017/09/04/transform3d%E7%A1%AC%E4%BB%B6%E5%8A%A0%E9%80%9F/"/>
    <id>http://yoursite.com/2017/09/04/transform3d硬件加速/</id>
    <published>2017-09-03T16:00:00.000Z</published>
    <updated>2017-09-04T07:28:49.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Emmet-（缩写语法）&quot;&gt;&lt;a href=&quot;#Emmet-（缩写语法）&quot; class=&quot;headerlink&quot; title=&quot;Emmet  （缩写语法）&quot;&gt;&lt;/a&gt;Emmet  （缩写语法）&lt;/h3&gt;&lt;p&gt;Emmet的前身是大名鼎鼎的Zen coding&lt;br&gt;使用仿CSS选择器的语法来生成代码，大大提高了HTML/CSS代码编写的速度&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://code.visualstudio.com/docs/editor/emmet&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://code.visualstudio.com/docs/editor/emmet&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;ESLint-（代码检查）&quot;&gt;&lt;a href=&quot;#ESLint-（代码检查）&quot; class=&quot;headerlink&quot; title=&quot;ESLint （代码检查）&quot;&gt;&lt;/a&gt;ESLint （代码检查）&lt;/h3&gt;&lt;p&gt;开源的 JavaScript 代码检查工具，使用 Node.js 编写；&lt;/p&gt;
&lt;p&gt;初衷是为了让程序员可以创建自己的检测规则，使其可以在编码的过程中发现问题而不是在执行的过程中。&lt;/p&gt;
&lt;p&gt;由于 ESLint 默认只支持 js 文件的脚本检测，如果我们需要支持类 html 文件（如 vue ）的内联脚本检测，还需要安装 eslint-plugin-html 插件&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;$ npm install -g eslint-plugin-html&lt;/li&gt;
&lt;li&gt;“eslint.options”: {&lt;/li&gt;
&lt;li&gt;​    “configFile”: “E:/git/github/styleguide/eslint/.eslintrc.js”,&lt;/li&gt;
&lt;li&gt;​    “plugins”: [“html”]&lt;/li&gt;
&lt;li&gt;},&lt;/li&gt;
&lt;li&gt;“eslint.validate”: [&lt;/li&gt;
&lt;li&gt;​    “javascript”,&lt;/li&gt;
&lt;li&gt;​    “javascriptreact”,&lt;/li&gt;
&lt;li&gt;​    “html”,&lt;/li&gt;
&lt;li&gt;​    “vue”&lt;/li&gt;
&lt;li&gt;]&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Emmet-（缩写语法）&quot;&gt;&lt;a href=&quot;#Emmet-（缩写语法）&quot; class=&quot;headerlink&quot; title=&quot;Emmet  （缩写语法）&quot;&gt;&lt;/a&gt;Emmet  （缩写语法）&lt;/h3&gt;&lt;p&gt;Emmet的前身是大名鼎鼎的Zen coding&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>前端编辑器常用插件</title>
    <link href="http://yoursite.com/2017/09/04/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E6%8F%92%E4%BB%B6/"/>
    <id>http://yoursite.com/2017/09/04/前端开发插件/</id>
    <published>2017-09-03T16:00:00.000Z</published>
    <updated>2017-09-04T07:28:49.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Emmet-（缩写语法）&quot;&gt;&lt;a href=&quot;#Emmet-（缩写语法）&quot; class=&quot;headerlink&quot; title=&quot;Emmet  （缩写语法）&quot;&gt;&lt;/a&gt;Emmet  （缩写语法）&lt;/h3&gt;&lt;p&gt;Emmet的前身是大名鼎鼎的Zen coding&lt;br&gt;使用仿CSS选择器的语法来生成代码，大大提高了HTML/CSS代码编写的速度&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://code.visualstudio.com/docs/editor/emmet&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://code.visualstudio.com/docs/editor/emmet&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;ESLint-（代码检查）&quot;&gt;&lt;a href=&quot;#ESLint-（代码检查）&quot; class=&quot;headerlink&quot; title=&quot;ESLint （代码检查）&quot;&gt;&lt;/a&gt;ESLint （代码检查）&lt;/h3&gt;&lt;p&gt;开源的 JavaScript 代码检查工具，使用 Node.js 编写；&lt;/p&gt;
&lt;p&gt;初衷是为了让程序员可以创建自己的检测规则，使其可以在编码的过程中发现问题而不是在执行的过程中。&lt;/p&gt;
&lt;p&gt;由于 ESLint 默认只支持 js 文件的脚本检测，如果我们需要支持类 html 文件（如 vue ）的内联脚本检测，还需要安装 eslint-plugin-html 插件&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;$ npm install -g eslint-plugin-html&lt;/li&gt;
&lt;li&gt;“eslint.options”: {&lt;/li&gt;
&lt;li&gt;​    “configFile”: “E:/git/github/styleguide/eslint/.eslintrc.js”,&lt;/li&gt;
&lt;li&gt;​    “plugins”: [“html”]&lt;/li&gt;
&lt;li&gt;},&lt;/li&gt;
&lt;li&gt;“eslint.validate”: [&lt;/li&gt;
&lt;li&gt;​    “javascript”,&lt;/li&gt;
&lt;li&gt;​    “javascriptreact”,&lt;/li&gt;
&lt;li&gt;​    “html”,&lt;/li&gt;
&lt;li&gt;​    “vue”&lt;/li&gt;
&lt;li&gt;]&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Emmet-（缩写语法）&quot;&gt;&lt;a href=&quot;#Emmet-（缩写语法）&quot; class=&quot;headerlink&quot; title=&quot;Emmet  （缩写语法）&quot;&gt;&lt;/a&gt;Emmet  （缩写语法）&lt;/h3&gt;&lt;p&gt;Emmet的前身是大名鼎鼎的Zen coding&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>旋转动画</title>
    <link href="http://yoursite.com/2017/09/04/%E6%97%8B%E8%BD%AC%E5%8A%A8%E7%94%BB/"/>
    <id>http://yoursite.com/2017/09/04/旋转动画/</id>
    <published>2017-09-03T16:00:00.000Z</published>
    <updated>2017-09-04T11:32:30.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;css-transform&quot;&gt;&lt;a href=&quot;#css-transform&quot; class=&quot;headerlink&quot; title=&quot;css transform&quot;&gt;&lt;/a&gt;css transform&lt;/h2&gt;&lt;p&gt; 在部分浏览器上 比较卡 （安卓）&lt;/p&gt;
&lt;h2 id=&quot;jquery-rotate库&quot;&gt;&lt;a href=&quot;#jquery-rotate库&quot; class=&quot;headerlink&quot; title=&quot;jquery rotate库&quot;&gt;&lt;/a&gt;jquery rotate库&lt;/h2&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;css-transform&quot;&gt;&lt;a href=&quot;#css-transform&quot; class=&quot;headerlink&quot; title=&quot;css transform&quot;&gt;&lt;/a&gt;css transform&lt;/h2&gt;&lt;p&gt; 在部分浏览器上 比较卡 （安卓）&lt;/p&gt;
&lt;h2 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>使用JS与CSS3的翻转实现3D翻牌效果</title>
    <link href="http://yoursite.com/2017/08/31/%E4%BD%BF%E7%94%A8JS%E4%B8%8ECSS3%E7%9A%84%E7%BF%BB%E8%BD%AC%E5%AE%9E%E7%8E%B03D%E7%BF%BB%E7%89%8C%E6%95%88%E6%9E%9C/"/>
    <id>http://yoursite.com/2017/08/31/使用JS与CSS3的翻转实现3D翻牌效果/</id>
    <published>2017-08-30T16:00:00.000Z</published>
    <updated>2017-09-05T06:54:23.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;语法&quot;&gt;&lt;a href=&quot;#语法&quot; class=&quot;headerlink&quot; title=&quot;语法&quot;&gt;&lt;/a&gt;&lt;strong&gt;语法&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;我们先来看看箭头函数的&lt;strong&gt;语法&lt;/strong&gt;：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;([param] [, param]) =&amp;gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   statements&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;param =&amp;gt; expression&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;一、param 是参数，根据参数个数不同，分这几种情况：&lt;br&gt;&lt;strong&gt;() =&amp;gt; { … } // 零个参数用 () 表示；&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;x =&amp;gt; { … } // 一个参数可以省略 ()；&lt;/strong&gt;&lt;br&gt;(x, y) =&amp;gt; { … } // 多参数不能省略 ()；&lt;/p&gt;
&lt;p&gt;二、expression：&lt;/p&gt;
&lt;p&gt;多行语句需要用{}括起来&lt;strong&gt;，&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;单行表达式不需要{}，并且会作为函数返回值&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;x =&amp;gt; &amp;#123; return x * x &amp;#125;; // 函数返回 x * x&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;x =&amp;gt; x * x; // 同上一行&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;x =&amp;gt; return x * x; // SyntaxError 报错，不能省略 &amp;#123;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;x =&amp;gt; &amp;#123; x * x &amp;#125;; // 合法，没有定义返回值，返回 undefined&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;三、和普通函数一样，箭头函数也可以使用&lt;a href=&quot;http://blog.csdn.net/mevicky/article/details/49902147&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;剩余参数&lt;/strong&gt;&lt;/a&gt;和默认参数。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;var func1 = (x = 1, y = 2) =&amp;gt; x + y;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;func1(); // 得到 3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;var func2 = (x, ...args) =&amp;gt; &amp;#123; console.log(args) &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;func2(1,2,3); // 输出 [2, 3]&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;特性&quot;&gt;&lt;a href=&quot;#特性&quot; class=&quot;headerlink&quot; title=&quot;特性&quot;&gt;&lt;/a&gt;&lt;strong&gt;特性&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;一、箭头函数内部&lt;strong&gt;没有constructor方法&lt;/strong&gt;，也&lt;strong&gt;没有prototype&lt;/strong&gt;，所以不支持new操作&lt;/p&gt;
&lt;p&gt;二、箭头函数的 this 始终指向函数定义时的 this，而非执行时；&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;var o = &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    x : 1,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    func : function() &amp;#123; console.log(this.x) &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    test : function() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        setTimeout(function() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            this.func();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;, 100);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;o.test(); // TypeError : this.func is not a function&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面的代码会出现错误，因为this的指向&lt;strong&gt;从o变为了全局&lt;/strong&gt;（函数调用中的this都是指向全局的）。我们需要修改上面的代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;var o = &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    x : 1,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    func : function() &amp;#123; console.log(this.x) &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    test : function() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        var _this = this;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        setTimeout(function() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            _this.func(); &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;, 100);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;o.test();&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通过使用外部事先保存的this就行了。这里就可以利用到箭头函数了，我们刚才说过，&lt;strong&gt;箭头函数的 this 始终指向函数定义时的 this，而非执行时&lt;/strong&gt;。所以我们将上面的代码修改如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;var o = &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    x : 1,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    func : function() &amp;#123; console.log(this.x) &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    test : function() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        setTimeout(() =&amp;gt; &amp;#123; this.func() &amp;#125;, 100);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;o.test();&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这回&lt;strong&gt;this就指向o&lt;/strong&gt;了。&lt;/p&gt;
&lt;p&gt;三、this是不会改变指向对象的**，我们知道call和apply可以改变this的指向，但是在箭头函数中是无效的。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;var x = 1,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    o = &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        x : 10,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        test : () =&amp;gt; this.x&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;o.test(); // 1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;o.test.call(o); // 依然是1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;语法&quot;&gt;&lt;a href=&quot;#语法&quot; class=&quot;headerlink&quot; title=&quot;语法&quot;&gt;&lt;/a&gt;&lt;strong&gt;语法&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;我们先来看看箭头函数的&lt;strong&gt;语法&lt;/strong&gt;：&lt;/p&gt;
&lt;figure class=&quot;hi
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>箭头函数</title>
    <link href="http://yoursite.com/2017/08/24/%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0/"/>
    <id>http://yoursite.com/2017/08/24/箭头函数/</id>
    <published>2017-08-23T16:00:00.000Z</published>
    <updated>2017-08-24T03:11:29.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;语法&quot;&gt;&lt;a href=&quot;#语法&quot; class=&quot;headerlink&quot; title=&quot;语法&quot;&gt;&lt;/a&gt;&lt;strong&gt;语法&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;我们先来看看箭头函数的&lt;strong&gt;语法&lt;/strong&gt;：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;([param] [, param]) =&amp;gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   statements&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;param =&amp;gt; expression&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;一、param 是参数，根据参数个数不同，分这几种情况：&lt;br&gt;&lt;strong&gt;() =&amp;gt; { … } // 零个参数用 () 表示；&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;x =&amp;gt; { … } // 一个参数可以省略 ()；&lt;/strong&gt;&lt;br&gt;(x, y) =&amp;gt; { … } // 多参数不能省略 ()；&lt;/p&gt;
&lt;p&gt;二、expression：&lt;/p&gt;
&lt;p&gt;多行语句需要用{}括起来&lt;strong&gt;，&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;单行表达式不需要{}，并且会作为函数返回值&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;x =&amp;gt; &amp;#123; return x * x &amp;#125;; // 函数返回 x * x&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;x =&amp;gt; x * x; // 同上一行&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;x =&amp;gt; return x * x; // SyntaxError 报错，不能省略 &amp;#123;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;x =&amp;gt; &amp;#123; x * x &amp;#125;; // 合法，没有定义返回值，返回 undefined&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;三、和普通函数一样，箭头函数也可以使用&lt;a href=&quot;http://blog.csdn.net/mevicky/article/details/49902147&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;剩余参数&lt;/strong&gt;&lt;/a&gt;和默认参数。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;var func1 = (x = 1, y = 2) =&amp;gt; x + y;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;func1(); // 得到 3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;var func2 = (x, ...args) =&amp;gt; &amp;#123; console.log(args) &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;func2(1,2,3); // 输出 [2, 3]&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;特性&quot;&gt;&lt;a href=&quot;#特性&quot; class=&quot;headerlink&quot; title=&quot;特性&quot;&gt;&lt;/a&gt;&lt;strong&gt;特性&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;一、箭头函数内部&lt;strong&gt;没有constructor方法&lt;/strong&gt;，也&lt;strong&gt;没有prototype&lt;/strong&gt;，所以不支持new操作&lt;/p&gt;
&lt;p&gt;二、箭头函数的 this 始终指向函数定义时的 this，而非执行时；&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;var o = &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    x : 1,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    func : function() &amp;#123; console.log(this.x) &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    test : function() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        setTimeout(function() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            this.func();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;, 100);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;o.test(); // TypeError : this.func is not a function&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面的代码会出现错误，因为this的指向&lt;strong&gt;从o变为了全局&lt;/strong&gt;（函数调用中的this都是指向全局的）。我们需要修改上面的代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;var o = &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    x : 1,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    func : function() &amp;#123; console.log(this.x) &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    test : function() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        var _this = this;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        setTimeout(function() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            _this.func(); &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;, 100);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;o.test();&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通过使用外部事先保存的this就行了。这里就可以利用到箭头函数了，我们刚才说过，&lt;strong&gt;箭头函数的 this 始终指向函数定义时的 this，而非执行时&lt;/strong&gt;。所以我们将上面的代码修改如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;var o = &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    x : 1,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    func : function() &amp;#123; console.log(this.x) &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    test : function() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        setTimeout(() =&amp;gt; &amp;#123; this.func() &amp;#125;, 100);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;o.test();&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这回&lt;strong&gt;this就指向o&lt;/strong&gt;了。&lt;/p&gt;
&lt;p&gt;三、this是不会改变指向对象的**，我们知道call和apply可以改变this的指向，但是在箭头函数中是无效的。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;var x = 1,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    o = &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        x : 10,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        test : () =&amp;gt; this.x&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;o.test(); // 1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;o.test.call(o); // 依然是1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;语法&quot;&gt;&lt;a href=&quot;#语法&quot; class=&quot;headerlink&quot; title=&quot;语法&quot;&gt;&lt;/a&gt;&lt;strong&gt;语法&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;我们先来看看箭头函数的&lt;strong&gt;语法&lt;/strong&gt;：&lt;/p&gt;
&lt;figure class=&quot;hi
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>es6—class</title>
    <link href="http://yoursite.com/2017/08/24/es6--class/"/>
    <id>http://yoursite.com/2017/08/24/es6--class/</id>
    <published>2017-08-23T16:00:00.000Z</published>
    <updated>2017-08-24T03:45:14.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;一、javascript传统做法生成一个对象实例：&quot;&gt;&lt;a href=&quot;#一、javascript传统做法生成一个对象实例：&quot; class=&quot;headerlink&quot; title=&quot;一、javascript传统做法生成一个对象实例：&quot;&gt;&lt;/a&gt;一、javascript传统做法生成一个对象实例：&lt;/h2&gt;&lt;p&gt;​    定义构造函数，然后通过new的方式完成&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;function StdInfo()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    this.name = &amp;quot;job&amp;quot;;            &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    this.age = 30;            &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;StdInfo.prototype.getNames = function ()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    console.log(&amp;quot;name：&amp;quot;+this.name);               &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//得到一个学员信息对象&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;var p = new StdInfo()&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;javacript中只有对象，没有类。它是是基于原型的语言，原型对象是新对象的模板，它将自身的属性共享给新对象。&lt;/p&gt;
&lt;h2 id=&quot;二、ES6添加了类，作为对象的模板&quot;&gt;&lt;a href=&quot;#二、ES6添加了类，作为对象的模板&quot; class=&quot;headerlink&quot; title=&quot;二、ES6添加了类，作为对象的模板&quot;&gt;&lt;/a&gt;二、ES6添加了类，作为对象的模板&lt;/h2&gt;&lt;h3 id=&quot;1-定义类&quot;&gt;&lt;a href=&quot;#1-定义类&quot; class=&quot;headerlink&quot; title=&quot;1.定义类&quot;&gt;&lt;/a&gt;1.定义类&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;//定义类&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;class StdInfo &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    constructor()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       this.name = &amp;quot;job&amp;quot;;            &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       this.age = 30;      &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    //定义在类中的方法不需要添加function&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    getNames()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       console.log(&amp;quot;name：&amp;quot;+this.name);      &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//使用new的方式得到一个实例对象&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;var p = new StdInfo();&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面的写法更加清晰、更像面向对象编程的语法，看起来也更容易理解。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;//定义类&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;class StdInfo &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    //...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;console.log(typeof  StdInfo);  //function&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;console.log(StdInfo === StdInfo.prototype.constructor);  //true&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;从上面的测试中可以看出来，类的类型就是一个函数，是一个“特殊函数”，指向的是构造函数。&lt;/p&gt;
&lt;p&gt;函数的定义方式有函数声明和函数表达式两种，类的定义方式也有两种，分别是：&lt;strong&gt;类声明&lt;/strong&gt;和&lt;strong&gt;类表达式&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&quot;2-类声明（-class-类名-）&quot;&gt;&lt;a href=&quot;#2-类声明（-class-类名-）&quot; class=&quot;headerlink&quot; title=&quot;2.类声明（    class 类名 {}    ）&quot;&gt;&lt;/a&gt;2.类声明（    class 类名 {}    ）&lt;/h3&gt;&lt;p&gt;类声明是定义类的一种方式，使用关键字&lt;strong&gt;class&lt;/strong&gt;，后面跟上类名，然后就是一对大括号。把这一类需要定义的方法放在大括号中。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;//定义类，可以省略constructor&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;class StdInfo &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    getNames()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        console.log(&amp;quot;name：&amp;quot;+this.name);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;// -------------------------------------&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//定义类，加上constructor&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;class StdInfo &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    //使用new定义实例对象时，自动调用这个函数，传入参数&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    constructor(name,age)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       this.name = name;            &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       this.age = age;      &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    getNames()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       console.log(&amp;quot;name：&amp;quot;+this.name);      &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//定义实例对象时，传入参数&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;var p = new StdInfo(&amp;quot;job&amp;quot;,30)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（1）constructor&lt;strong&gt;是一个默认方法，使用&lt;/strong&gt;new&lt;strong&gt;来定义实例对象时，自动执行&lt;/strong&gt;constructor&lt;strong&gt;函数，传入所需要的参数,执行完&lt;/strong&gt;constructor**后自动返回实例对象。&lt;/p&gt;
&lt;p&gt;（2）一个类中只能有一个&lt;strong&gt;constructor&lt;/strong&gt;函数，定义多个会报错。&lt;/p&gt;
&lt;p&gt;（3）constructor**中的this指向新创建的实例对象，利用this往新创建的实例对象扩展属性。&lt;/p&gt;
&lt;p&gt;（4）在定义实例对象时，不需要在初始化阶段做一些事，可以不用显示的写&lt;strong&gt;constructor&lt;/strong&gt;函数。如果没有显式定义，一个空的constructor方法会被默认添加，constructor(){}&lt;/p&gt;
&lt;h3 id=&quot;3-类表达式&quot;&gt;&lt;a href=&quot;#3-类表达式&quot; class=&quot;headerlink&quot; title=&quot;3.类表达式&quot;&gt;&lt;/a&gt;3.类表达式&lt;/h3&gt;&lt;p&gt;类表达式是定义类的另一种形式，类似于函数表达式，把一个函数作为值赋给变量。&lt;/p&gt;
&lt;p&gt;可以把定义的类赋值给一个变量，这时候变量就为类名。&lt;strong&gt;class&lt;/strong&gt;关键字之后的类名可有可无，如果存在，则只能在类内部使用。&lt;/p&gt;
&lt;p&gt;定义类 class后面有类名：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt; const People = class StdInfo &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    constructor()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        console.log(StdInfo);  //可以打印出值，是一个函数&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;new People();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;new StdInfo();  //报错，StdInfo is not defined；&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;定义类 class后面没有类名：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;const People = class &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    constructor()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;new People();&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;立即执行的类：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;const p = new class &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    constructor(name,age)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        console.log(name,age);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;(&amp;quot;job&amp;quot;,30)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;立即执行的类，在类前要加上&lt;strong&gt;new&lt;/strong&gt;。&lt;strong&gt;p&lt;/strong&gt;为类的实例对象。&lt;/p&gt;
&lt;h3 id=&quot;4-不存在变量提升&quot;&gt;&lt;a href=&quot;#4-不存在变量提升&quot; class=&quot;headerlink&quot; title=&quot;4.不存在变量提升&quot;&gt;&lt;/a&gt;4.不存在变量提升&lt;/h3&gt;&lt;p&gt;定义类不存在变量提升，只能先定义类后使用，跟函数声明有区别的。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;//-----函数声明-------&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//定义前可以先使用，因为函数声明提升的缘故，调用合法。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;func();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;function func()&amp;#123;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//-----定义类---------------&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;new StdInfo();  //报错，StdInfo is not defined&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;class StdInfo&amp;#123;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;5-extends继承&quot;&gt;&lt;a href=&quot;#5-extends继承&quot; class=&quot;headerlink&quot; title=&quot;5.extends继承&quot;&gt;&lt;/a&gt;5.extends继承&lt;/h2&gt;&lt;p&gt;使用&lt;strong&gt;extends&lt;/strong&gt;关键字实现类之间的继承。这比在ES5中使用继承要方便很多。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;//定义类父类&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;class Parent &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    constructor(name,age)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        this.name = name;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        this.age = age;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    speakSometing()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        console.log(&amp;quot;I can speek chinese&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//定义子类，继承父类&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;class Child extends Parent &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    coding()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        console.log(&amp;quot;coding javascript&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;var c = new Child();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//可以调用父类的方法&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;c.speakSometing(); // I can speek chinese&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用继承的方式，子类就拥有了父类的方法。&lt;/p&gt;
&lt;p&gt;如果子类中有&lt;strong&gt;constructor&lt;/strong&gt;构造函数，则必须使用调用&lt;strong&gt;super&lt;/strong&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;//定义类父类&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;class Parent &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    constructor(name,age)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        this.name = name;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        this.age = age;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    speakSometing()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        console.log(&amp;quot;I can speek chinese&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//定义子类，继承父类&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;class Child extends Parent &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    constructor(name,age)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        //不调super()，则会报错  this is not defined&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        //必须调用super&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        super(name,age);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    coding()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        console.log(&amp;quot;coding javascript&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;var c = new Child(&amp;quot;job&amp;quot;,30);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//可以调用父类的方法&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;c.speakSometing(); // I can speek chinese&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;子类必须在constructor方法中调用super方法，否则新建实例时会报错(&lt;em&gt;this is not defined&lt;/em&gt;)。这是因为子类没有自己的this对象，而是继承父类的this对象，然后对其进行加工。如果不调用super方法，子类就得不到this对象。&lt;/p&gt;
&lt;p&gt;以上是对ES6中类的简单总结学习，欢迎一起讨论。&lt;/p&gt;
&lt;p&gt;参考：&lt;br&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://es6.ruanyifeng.com/#docs/class&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://es6.ruanyifeng.com/#docs/class&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000007537173&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;2016年11月20日发布&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;javascript:void(0&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;**&lt;/a&gt;;)&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;javascript:void(0&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;新浪微博&lt;/a&gt;;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;javascript:void(0&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;微信&lt;/a&gt;;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;javascript:void(0&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Twitter&lt;/a&gt;;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;javascript:void(0&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Facebook&lt;/a&gt;;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;赞  |   1收藏  |  3&lt;/p&gt;
&lt;h4 id=&quot;你可能感兴趣的文章&quot;&gt;&lt;a href=&quot;#你可能感兴趣的文章&quot; class=&quot;headerlink&quot; title=&quot;你可能感兴趣的文章&quot;&gt;&lt;/a&gt;你可能感兴趣的文章&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000004102588&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JavaScript笔记集&lt;/a&gt; 6 收藏，952 浏览&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000010542028&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ES6的Class学习&lt;/a&gt; 1 收藏，67 浏览&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000004219721&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;浮动【电梯】或【回到底部】的小插件ielevator.js&lt;/a&gt; 2 收藏，727 浏览&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;## &lt;/p&gt;
&lt;p&gt;2 条评论&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;javascript:;&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;默认排序&lt;/a&gt;&lt;a href=&quot;javascript:;&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;时间排序&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://segmentfault.com/u/sunny_l&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;https://static.segmentfault.com/v-599d4ab0/global/img/user-64.png&quot; alt=&quot;img&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://segmentfault.com/u/sunny_l&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sunny_L&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 7月4日&lt;/p&gt;
&lt;p&gt;非class方法可以写Point.prototype.on=Point.prototype.addListener，es6的class应该怎么写？包内好像不能用=号&lt;/p&gt;
&lt;p&gt;** 赞 回复&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://segmentfault.com/u/wocaibushidaocaoren&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;https://sfault-avatar.b0.upaiyun.com/184/839/1848398528-5880ca077eec4_big64&quot; alt=&quot;img&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://segmentfault.com/u/wocaibushidaocaoren&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;我才不是稻草人&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 7月14日&lt;/p&gt;
&lt;p&gt;说的不错，想问个问题，在代码里&lt;br&gt;//定义类父类&lt;br&gt;class Parent {&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;constructor(name,age)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    this.name = name;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    this.age = age;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;speakSometing()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    console.log(&amp;quot;I can speek chinese&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;}&lt;br&gt;//定义子类，继承父类&lt;br&gt;class Child extends Parent {&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;constructor(name,age)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    //不调super()，则会报错  this is not defined&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    //必须调用super&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    super(name,age);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;coding()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    this.speakSometing()   //可以这么用吗？？？？？？&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    console.log(&amp;quot;coding javascript&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;}&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、javascript传统做法生成一个对象实例：&quot;&gt;&lt;a href=&quot;#一、javascript传统做法生成一个对象实例：&quot; class=&quot;headerlink&quot; title=&quot;一、javascript传统做法生成一个对象实例：&quot;&gt;&lt;/a&gt;一、javascrip
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>小数点截取两位（小数三位以上的，小数点第二位加一）</title>
    <link href="http://yoursite.com/2017/07/05/%E5%B0%8F%E6%95%B0%E7%82%B9%E6%88%AA%E5%8F%96%E4%B8%A4%E4%BD%8D%EF%BC%88%E5%B0%8F%E6%95%B0%E4%B8%89%E4%BD%8D%E4%BB%A5%E4%B8%8A%E7%9A%84%EF%BC%8C%E5%B0%8F%E6%95%B0%E7%82%B9%E7%AC%AC%E4%BA%8C%E4%BD%8D%E5%8A%A0%E4%B8%80%EF%BC%89/"/>
    <id>http://yoursite.com/2017/07/05/小数点截取两位（小数三位以上的，小数点第二位加一）/</id>
    <published>2017-07-04T16:00:00.000Z</published>
    <updated>2017-07-05T06:16:51.000Z</updated>
    
    <content type="html">&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; handleNum(p)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  var r = (&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt; + p).split(&lt;span class=&quot;string&quot;&gt;&#39;.&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  var f = r[0], e = r[1];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!e || e.length &amp;lt;= 2)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; Number(p).toFixed(2)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; (+f + ((+e.substr(0, 2) + 1)/100)).toFixed(2)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;toFixed(2) 四舍五入保留两位小数&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>weex /  weex-toolkit 脚手架(mac)</title>
    <link href="http://yoursite.com/2017/01/17/weex/"/>
    <id>http://yoursite.com/2017/01/17/weex/</id>
    <published>2017-01-16T16:00:00.000Z</published>
    <updated>2017-01-19T08:06:54.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;安装-node&quot;&gt;&lt;a href=&quot;#安装-node&quot; class=&quot;headerlink&quot; title=&quot;安装 node&quot;&gt;&lt;/a&gt;安装 node&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;brew install node&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意： node 版本要大于 5.0&lt;/p&gt;
&lt;h3 id=&quot;检查-Node的当前版本&quot;&gt;&lt;a href=&quot;#检查-Node的当前版本&quot; class=&quot;headerlink&quot; title=&quot;检查 Node的当前版本&quot;&gt;&lt;/a&gt;检查 Node的当前版本&lt;/h3&gt;&lt;p&gt;node -v  &lt;/p&gt;
&lt;h3 id=&quot;管理Node版本&quot;&gt;&lt;a href=&quot;#管理Node版本&quot; class=&quot;headerlink&quot; title=&quot;管理Node版本&quot;&gt;&lt;/a&gt;管理Node版本&lt;/h3&gt;&lt;p&gt;即使用Node Binary管理模块“n”&lt;br&gt;安装n模块&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo npm install -g n&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;安装node最新的稳定版本&quot;&gt;&lt;a href=&quot;#安装node最新的稳定版本&quot; class=&quot;headerlink&quot; title=&quot;安装node最新的稳定版本&quot;&gt;&lt;/a&gt;安装node最新的稳定版本&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;sudo n stable
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;安装weex-toolkit&quot;&gt;&lt;a href=&quot;#安装weex-toolkit&quot; class=&quot;headerlink&quot; title=&quot;安装weex-toolkit&quot;&gt;&lt;/a&gt;安装weex-toolkit&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ npm install -g weex-toolkit
&lt;/code&gt;&lt;/pre&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装-node&quot;&gt;&lt;a href=&quot;#安装-node&quot; class=&quot;headerlink&quot; title=&quot;安装 node&quot;&gt;&lt;/a&gt;安装 node&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2017/01/10/BFC_IFC/"/>
    <id>http://yoursite.com/2017/01/10/BFC_IFC/</id>
    <published>2017-01-10T10:20:00.000Z</published>
    <updated>2017-09-05T06:54:16.000Z</updated>
    
    <content type="html">&lt;hr&gt;
&lt;p&gt;title: BFC 原理讲解&lt;br&gt;date: 2017-09-05&lt;/p&gt;
&lt;h3 id=&quot;一、&quot;&gt;&lt;a href=&quot;#一、&quot; class=&quot;headerlink&quot; title=&quot;一、&quot;&gt;&lt;/a&gt;一、&lt;/h3&gt;</content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt;title: BFC 原理讲解&lt;br&gt;date: 2017-09-05&lt;/p&gt;
&lt;h3 id=&quot;一、&quot;&gt;&lt;a href=&quot;#一、&quot; class=&quot;headerlink&quot; title=&quot;一、&quot;&gt;&lt;/a&gt;一、&lt;/h3&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2017/01/10/CSS%20%E7%9B%92%E7%8A%B6%E6%A8%A1%E5%9E%8B/"/>
    <id>http://yoursite.com/2017/01/10/CSS 盒状模型/</id>
    <published>2017-01-10T10:20:00.000Z</published>
    <updated>2017-09-05T05:58:57.000Z</updated>
    
    <content type="html">&lt;hr&gt;
&lt;p&gt;title: CSS 盒状模型&lt;br&gt;date: 2017-09-05&lt;/p&gt;
&lt;h3 id=&quot;一、盒模型定义&quot;&gt;&lt;a href=&quot;#一、盒模型定义&quot; class=&quot;headerlink&quot; title=&quot;一、盒模型定义&quot;&gt;&lt;/a&gt;一、盒模型定义&lt;/h3&gt;&lt;p&gt;(1)页面上显示的每个元素（包括内联元素）都可以看作一个盒子，即盒模型( box model );&lt;/p&gt;
&lt;p&gt;(2)盒模型由 4 部分组成，从内到外分别是：&lt;code&gt;content padding border margin&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://oph264zoo.bkt.clouddn.com/17-8-27/30023282.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;二、w3c与-IE的差别&quot;&gt;&lt;a href=&quot;#二、w3c与-IE的差别&quot; class=&quot;headerlink&quot; title=&quot;二、w3c与 IE的差别&quot;&gt;&lt;/a&gt;二、w3c与 IE的差别&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;W3C 标准盒模型&lt;/strong&gt;一个元素的宽度（高度以此类推）应该这样计算：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;一个元素的宽度 =  content&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;盒子总宽度 = margin-left + border-left + padding-left + width + padding-right + border-right + margin-right&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;而&lt;strong&gt;IE 怪异盒模型&lt;/strong&gt;一个元素的宽度（高度以此类推）却是这样计算的：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;一个元素的宽度 =  content + padding + border&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;盒子总宽度 = margin-left + width + margin-right&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;三、w3c与-IE的差别的解决方案-box-sizing&quot;&gt;&lt;a href=&quot;#三、w3c与-IE的差别的解决方案-box-sizing&quot; class=&quot;headerlink&quot; title=&quot;三、w3c与 IE的差别的解决方案  box-sizing&quot;&gt;&lt;/a&gt;三、w3c与 IE的差别的解决方案  box-sizing&lt;/h3&gt;&lt;p&gt;（1）浏览器默认设置：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;// W3C 标准盒模型（浏览器默认）&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;box-sizing: content-box;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;// IE 怪异盒模型&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;box-sizing: border-box;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（2）统一设置：&lt;/p&gt;
&lt;p&gt;当我们设置 &lt;code&gt;box-sizing: border-box;&lt;/code&gt; 时，&lt;code&gt;border&lt;/code&gt; 和 &lt;code&gt;padding&lt;/code&gt; 就被包含在了宽高之内，和 IE 盒模型是一样的。&lt;/p&gt;
&lt;p&gt;所以，为了避免你同一份 css 在不同浏览器下表现不同，最好加上：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;*, *:before, *:after &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -moz-box-sizing: border-box;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -webkit-box-sizing: border-box;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  box-sizing: border-box;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;四、JS-如何获取盒模型对应的宽和高&quot;&gt;&lt;a href=&quot;#四、JS-如何获取盒模型对应的宽和高&quot; class=&quot;headerlink&quot; title=&quot;四、JS 如何获取盒模型对应的宽和高&quot;&gt;&lt;/a&gt;四、JS 如何获取盒模型对应的宽和高&lt;/h3&gt;&lt;p&gt;四种方式：&lt;/p&gt;
&lt;p&gt;（1）style&lt;/p&gt;
&lt;p&gt;（2）currentStyle&lt;/p&gt;
&lt;p&gt;（3）getComputedStyle(“元素”)&lt;/p&gt;
&lt;p&gt;（4）getBoundingClientRect()&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt; &amp;lt;style&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  * &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    margin: 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    padding: 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  #box &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    width: 100px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    height: 100px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    padding: 50px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    border: 5px solid red;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    margin: 50px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/style&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;div id=&amp;quot;box&amp;quot; style=&amp;quot;&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; let box = document.getElementById(&amp;apos;box&amp;apos;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  // 只能取到内联样式的宽高&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  console.log(&amp;apos;style:&amp;apos; + box.style.width) // 100px&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  // 内联样式和外联样式的宽高都能取到，但只有 IE 支持&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  console.log(&amp;apos;currentStyle:&amp;apos; + box.currentStyle.width) // 100px&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  // 内联样式和外联样式的宽高都能取到，几乎所有主流浏览器都支持&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  console.log(&amp;apos;getComputedStyle:&amp;apos; + getComputedStyle(box).width) // 100px&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  // 内联样式和外联样式的宽高都能取到，几乎所有主流浏览器都支持，取到的是盒子总宽度 console.log(&amp;apos;getBoundingClientRect:&amp;apos;+box.getBoundingClientRect().width)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt;title: CSS 盒状模型&lt;br&gt;date: 2017-09-05&lt;/p&gt;
&lt;h3 id=&quot;一、盒模型定义&quot;&gt;&lt;a href=&quot;#一、盒模型定义&quot; class=&quot;headerlink&quot; title=&quot;一、盒模型定义&quot;&gt;&lt;/a&gt;一、盒模型定义&lt;/h3&gt;&lt;p&gt;(1
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>promise</title>
    <link href="http://yoursite.com/2017/01/10/promise/"/>
    <id>http://yoursite.com/2017/01/10/promise/</id>
    <published>2017-01-09T16:00:00.000Z</published>
    <updated>2017-01-10T07:58:42.000Z</updated>
    
    <content type="html">&lt;p&gt;ES6 Promise 先拉出来遛遛&lt;br&gt;复杂的概念先不讲，我们先简单粗暴地把Promise用一下，有个直观感受。那么第一个问题来了，Promise是什么玩意呢？是一个类？对象？数组？函数？&lt;/p&gt;
&lt;p&gt;别猜了，直接打印出来看看吧，console.dir(Promise)，就这么简单粗暴。&lt;/p&gt;
&lt;p&gt;这么一看就明白了，Promise是一个构造函数，自己身上有all、reject、resolve这几个眼熟的方法，原型上有then、catch等同样很眼熟的方法。这么说用Promise new出来的对象肯定就有then、catch方法喽，没错。&lt;/p&gt;
&lt;p&gt;那就new一个玩玩吧。&lt;br&gt;复制代码&lt;/p&gt;
&lt;p&gt;var p = new Promise(function(resolve, reject){&lt;br&gt;    //做一些异步操作&lt;br&gt;    setTimeout(function(){&lt;br&gt;        console.log(‘执行完成’);&lt;br&gt;        resolve(‘随便什么数据’);&lt;br&gt;    }, 2000);&lt;br&gt;});&lt;br&gt;复制代码&lt;br&gt;Promise的构造函数接收一个参数，是函数，并且传入两个参数：resolve，reject，分别表示异步操作执行成功后的回调函数和异步操作执行失败后的回调函数。其实这里用“成功”和“失败”来描述并不准确，按照标准来讲，resolve是将Promise的状态置为fullfiled，reject是将Promise的状态置为rejected。不过在我们开始阶段可以先这么理解，后面再细究概念。&lt;/p&gt;
&lt;p&gt;在上面的代码中，我们执行了一个异步操作，也就是setTimeout，2秒后，输出“执行完成”，并且调用resolve方法。&lt;/p&gt;
&lt;p&gt;运行代码，会在2秒后输出“执行完成”。注意！我只是new了一个对象，并没有调用它，我们传进去的函数就已经执行了，这是需要注意的一个细节。所以我们用Promise的时候一般是包在一个函数中，在需要的时候去运行这个函数，如：&lt;br&gt;复制代码&lt;br&gt;function runAsync(){&lt;br&gt;    var p = new Promise(function(resolve, reject){&lt;br&gt;        //做一些异步操作&lt;br&gt;        setTimeout(function(){&lt;br&gt;            console.log(‘执行完成’);&lt;br&gt;            resolve(‘随便什么数据’);&lt;br&gt;        }, 2000);&lt;br&gt;    });&lt;br&gt;    return p;&lt;br&gt;}&lt;br&gt;runAsync()&lt;br&gt;复制代码&lt;br&gt;这时候你应该有两个疑问：1.包装这么一个函数有毛线用？2.resolve(‘随便什么数据’);这是干毛的？&lt;/p&gt;
&lt;p&gt;我们继续来讲。在我们包装好的函数最后，会return出Promise对象，也就是说，执行这个函数我们得到了一个Promise对象。还记得Promise对象上有then、catch方法吧？这就是强大之处了，看下面的代码：&lt;br&gt;复制代码&lt;br&gt;runAsync().then(function(data){&lt;br&gt;    console.log(data);&lt;br&gt;    //后面可以用传过来的数据做些其他操作&lt;br&gt;    //……&lt;br&gt;});&lt;br&gt;复制代码&lt;br&gt;在runAsync()的返回上直接调用then方法，then接收一个参数，是函数，并且会拿到我们在runAsync中调用resolve时传的的参数。运行这段代码，会在2秒后输出“执行完成”，紧接着输出“随便什么数据”。&lt;/p&gt;
&lt;p&gt;这时候你应该有所领悟了，原来then里面的函数就跟我们平时的回调函数一个意思，能够在runAsync这个异步任务执行完成之后被执行。这就是Promise的作用了，简单来讲，就是能把原来的回调写法分离出来，在异步操作执行完后，用链式调用的方式执行回调函数。&lt;/p&gt;
&lt;p&gt;你可能会不屑一顾，那么牛逼轰轰的Promise就这点能耐？我把回调函数封装一下，给runAsync传进去不也一样吗，就像这样：&lt;br&gt;复制代码&lt;br&gt;function runAsync(callback){&lt;br&gt;    setTimeout(function(){&lt;br&gt;        console.log(‘执行完成’);&lt;br&gt;        callback(‘随便什么数据’);&lt;br&gt;    }, 2000);&lt;br&gt;}&lt;/p&gt;
&lt;p&gt;runAsync(function(data){&lt;br&gt;    console.log(data);&lt;br&gt;});&lt;br&gt;复制代码&lt;br&gt;效果也是一样的，还费劲用Promise干嘛。那么问题来了，有多层回调该怎么办？如果callback也是一个异步操作，而且执行完后也需要有相应的回调函数，该怎么办呢？总不能再定义一个callback2，然后给callback传进去吧。而Promise的优势在于，可以在then方法中继续写Promise对象并返回，然后继续调用then来进行回调操作。&lt;/p&gt;
&lt;p&gt;链式操作的用法&lt;br&gt;所以，从表面上看，Promise只是能够简化层层回调的写法，而实质上，Promise的精髓是“状态”，用维护状态、传递状态的方式来使得回调函数能够及时调用，它比传递callback函数要简单、灵活的多。所以使用Promise的正确场景是这样的：&lt;br&gt;复制代码&lt;br&gt;runAsync1()&lt;br&gt;.then(function(data){&lt;br&gt;    console.log(data);&lt;br&gt;    return runAsync2();&lt;br&gt;})&lt;br&gt;.then(function(data){&lt;br&gt;    console.log(data);&lt;br&gt;    return runAsync3();&lt;br&gt;})&lt;br&gt;.then(function(data){&lt;br&gt;    console.log(data);&lt;br&gt;});&lt;br&gt;复制代码&lt;br&gt;这样能够按顺序，每隔两秒输出每个异步回调中的内容，在runAsync2中传给resolve的数据，能在接下来的then方法中拿到。运行结果如下：&lt;/p&gt;
&lt;p&gt;猜猜runAsync1、runAsync2、runAsync3这三个函数都是如何定义的？没错，就是下面这样（代码较长请自行展开）：&lt;/p&gt;
&lt;p&gt;复制代码&lt;br&gt;function runAsync1(){&lt;br&gt;    var p = new Promise(function(resolve, reject){&lt;br&gt;        //做一些异步操作&lt;br&gt;        setTimeout(function(){&lt;br&gt;            console.log(‘异步任务1执行完成’);&lt;br&gt;            resolve(‘随便什么数据1’);&lt;br&gt;        }, 1000);&lt;br&gt;    });&lt;br&gt;    return p;&lt;br&gt;}&lt;br&gt;function runAsync2(){&lt;br&gt;    var p = new Promise(function(resolve, reject){&lt;br&gt;        //做一些异步操作&lt;br&gt;        setTimeout(function(){&lt;br&gt;            console.log(‘异步任务2执行完成’);&lt;br&gt;            resolve(‘随便什么数据2’);&lt;br&gt;        }, 2000);&lt;br&gt;    });&lt;br&gt;    return p;&lt;br&gt;}&lt;br&gt;function runAsync3(){&lt;br&gt;    var p = new Promise(function(resolve, reject){&lt;br&gt;        //做一些异步操作&lt;br&gt;        setTimeout(function(){&lt;br&gt;            console.log(‘异步任务3执行完成’);&lt;br&gt;            resolve(‘随便什么数据3’);&lt;br&gt;        }, 2000);&lt;br&gt;    });&lt;br&gt;    return p;&lt;br&gt;}&lt;br&gt;复制代码&lt;/p&gt;
&lt;p&gt;在then方法中，你也可以直接return数据而不是Promise对象，在后面的then中就可以接收到数据了，比如我们把上面的代码修改成这样：&lt;br&gt;复制代码&lt;br&gt;runAsync1()&lt;br&gt;.then(function(data){&lt;br&gt;    console.log(data);&lt;br&gt;    return runAsync2();&lt;br&gt;})&lt;br&gt;.then(function(data){&lt;br&gt;    console.log(data);&lt;br&gt;    return ‘直接返回数据’;  //这里直接返回数据&lt;br&gt;})&lt;br&gt;.then(function(data){&lt;br&gt;    console.log(data);&lt;br&gt;});&lt;br&gt;复制代码&lt;/p&gt;
&lt;p&gt;那么输出就变成了这样：&lt;/p&gt;
&lt;p&gt;reject的用法&lt;br&gt;到这里，你应该对“Promise是什么玩意”有了最基本的了解。那么我们接着来看看ES6的Promise还有哪些功能。我们光用了resolve，还没用reject呢，它是做什么的呢？事实上，我们前面的例子都是只有“执行成功”的回调，还没有“失败”的情况，reject的作用就是把Promise的状态置为rejected，这样我们在then中就能捕捉到，然后执行“失败”情况的回调。看下面的代码。&lt;br&gt;复制代码&lt;br&gt;function getNumber(){&lt;br&gt;    var p = new Promise(function(resolve, reject){&lt;br&gt;        //做一些异步操作&lt;br&gt;        setTimeout(function(){&lt;br&gt;            var num = Math.ceil(Math.random()*10); //生成1-10的随机数&lt;br&gt;            if(num&amp;lt;=5){&lt;br&gt;                resolve(num);&lt;br&gt;            }&lt;br&gt;            else{&lt;br&gt;                reject(‘数字太大了’);&lt;br&gt;            }&lt;br&gt;        }, 2000);&lt;br&gt;    });&lt;br&gt;    return p;&lt;br&gt;}&lt;/p&gt;
&lt;p&gt;getNumber()&lt;br&gt;.then(&lt;br&gt;    function(data){&lt;br&gt;        console.log(‘resolved’);&lt;br&gt;        console.log(data);&lt;br&gt;    },&lt;br&gt;    function(reason, data){&lt;br&gt;        console.log(‘rejected’);&lt;br&gt;        console.log(reason);&lt;br&gt;    }&lt;br&gt;);&lt;br&gt;复制代码&lt;br&gt;getNumber函数用来异步获取一个数字，2秒后执行完成，如果数字小于等于5，我们认为是“成功”了，调用resolve修改Promise的状态。否则我们认为是“失败”了，调用reject并传递一个参数，作为失败的原因。&lt;/p&gt;
&lt;p&gt;运行getNumber并且在then中传了两个参数，then方法可以接受两个参数，第一个对应resolve的回调，第二个对应reject的回调。所以我们能够分别拿到他们传过来的数据。多次运行这段代码，你会随机得到下面两种结果：&lt;br&gt; 或者 &lt;/p&gt;
&lt;p&gt;catch的用法&lt;br&gt;我们知道Promise对象除了then方法，还有一个catch方法，它是做什么用的呢？其实它和then的第二个参数一样，用来指定reject的回调，用法是这样：&lt;br&gt;复制代码&lt;br&gt;getNumber()&lt;br&gt;.then(function(data){&lt;br&gt;    console.log(‘resolved’);&lt;br&gt;    console.log(data);&lt;br&gt;})&lt;br&gt;.catch(function(reason){&lt;br&gt;    console.log(‘rejected’);&lt;br&gt;    console.log(reason);&lt;br&gt;});&lt;br&gt;复制代码&lt;br&gt;效果和写在then的第二个参数里面一样。不过它还有另外一个作用：在执行resolve的回调（也就是上面then中的第一个参数）时，如果抛出异常了（代码出错了），那么并不会报错卡死js，而是会进到这个catch方法中。请看下面的代码：&lt;br&gt;复制代码&lt;br&gt;getNumber()&lt;br&gt;.then(function(data){&lt;br&gt;    console.log(‘resolved’);&lt;br&gt;    console.log(data);&lt;br&gt;    console.log(somedata); //此处的somedata未定义&lt;br&gt;})&lt;br&gt;.catch(function(reason){&lt;br&gt;    console.log(‘rejected’);&lt;br&gt;    console.log(reason);&lt;br&gt;});&lt;br&gt;复制代码&lt;br&gt;在resolve的回调中，我们console.log(somedata);而somedata这个变量是没有被定义的。如果我们不用Promise，代码运行到这里就直接在控制台报错了，不往下运行了。但是在这里，会得到这样的结果：&lt;/p&gt;
&lt;p&gt;也就是说进到catch方法里面去了，而且把错误原因传到了reason参数中。即便是有错误的代码也不会报错了，这与我们的try/catch语句有相同的功能。&lt;/p&gt;
&lt;p&gt;all的用法&lt;br&gt;Promise的all方法提供了并行执行异步操作的能力，并且在所有异步操作执行完后才执行回调。我们仍旧使用上面定义好的runAsync1、runAsync2、runAsync3这三个函数，看下面的例子：&lt;br&gt;复制代码&lt;br&gt;Promise&lt;br&gt;.all([runAsync1(), runAsync2(), runAsync3()])&lt;br&gt;.then(function(results){&lt;br&gt;    console.log(results);&lt;br&gt;});&lt;br&gt;复制代码&lt;br&gt;用Promise.all来执行，all接收一个数组参数，里面的值最终都算返回Promise对象。这样，三个异步操作的并行执行的，等到它们都执行完后才会进到then里面。那么，三个异步操作返回的数据哪里去了呢？都在then里面呢，all会把所有异步操作的结果放进一个数组中传给then，就是上面的results。所以上面代码的输出结果就是：&lt;/p&gt;
&lt;p&gt;有了all，你就可以并行执行多个异步操作，并且在一个回调中处理所有的返回数据，是不是很酷？有一个场景是很适合用这个的，一些游戏类的素材比较多的应用，打开网页时，预先加载需要用到的各种资源如图片、flash以及各种静态文件。所有的都加载完后，我们再进行页面的初始化。&lt;/p&gt;
&lt;p&gt;race的用法&lt;br&gt;all方法的效果实际上是「谁跑的慢，以谁为准执行回调」，那么相对的就有另一个方法「谁跑的快，以谁为准执行回调」，这就是race方法，这个词本来就是赛跑的意思。race的用法与all一样，我们把上面runAsync1的延时改为1秒来看一下：&lt;br&gt;复制代码&lt;br&gt;Promise&lt;br&gt;.race([runAsync1(), runAsync2(), runAsync3()])&lt;br&gt;.then(function(results){&lt;br&gt;    console.log(results);&lt;br&gt;});&lt;br&gt;复制代码&lt;br&gt;这三个异步操作同样是并行执行的。结果你应该可以猜到，1秒后runAsync1已经执行完了，此时then里面的就执行了。结果是这样的：&lt;/p&gt;
&lt;p&gt;你猜对了吗？不完全，是吧。在then里面的回调开始执行时，runAsync2()和runAsync3()并没有停止，仍旧再执行。于是再过1秒后，输出了他们结束的标志。&lt;/p&gt;
&lt;p&gt;这个race有什么用呢？使用场景还是很多的，比如我们可以用race给某个异步请求设置超时时间，并且在超时后执行相应的操作，代码如下：&lt;br&gt;复制代码&lt;br&gt;//请求某个图片资源&lt;br&gt;function requestImg(){&lt;br&gt;    var p = new Promise(function(resolve, reject){&lt;br&gt;        var img = new Image();&lt;br&gt;        img.onload = function(){&lt;br&gt;            resolve(img);&lt;br&gt;        }&lt;br&gt;        img.src = ‘xxxxxx’;&lt;br&gt;    });&lt;br&gt;    return p;&lt;br&gt;}&lt;/p&gt;
&lt;p&gt;//延时函数，用于给请求计时&lt;br&gt;function timeout(){&lt;br&gt;    var p = new Promise(function(resolve, reject){&lt;br&gt;        setTimeout(function(){&lt;br&gt;            reject(‘图片请求超时’);&lt;br&gt;        }, 5000);&lt;br&gt;    });&lt;br&gt;    return p;&lt;br&gt;}&lt;/p&gt;
&lt;p&gt;Promise&lt;br&gt;.race([requestImg(), timeout()])&lt;br&gt;.then(function(results){&lt;br&gt;    console.log(results);&lt;br&gt;})&lt;br&gt;.catch(function(reason){&lt;br&gt;    console.log(reason);&lt;br&gt;});&lt;br&gt;复制代码&lt;br&gt;requestImg函数会异步请求一张图片，我把地址写为”xxxxxx”，所以肯定是无法成功请求到的。timeout函数是一个延时5秒的异步操作。我们把这两个返回Promise对象的函数放进race，于是他俩就会赛跑，如果5秒之内图片请求成功了，那么遍进入then方法，执行正常的流程。如果5秒钟图片还未成功返回，那么timeout就跑赢了，则进入catch，报出“图片请求超时”的信息。运行结果如下：&lt;/p&gt;
&lt;p&gt;总结&lt;br&gt;ES6 Promise的内容就这些吗？是的，能用到的基本就这些。&lt;br&gt;我怎么还见过done、finally、success、fail等，这些是啥？这些并不在Promise标准中，而是我们自己实现的语法糖。&lt;/p&gt;
&lt;p&gt;本文中所有异步操作均以setTimeout为例子，之所以不使用ajax是为了避免引起混淆，因为谈起ajax，很多人的第一反应就是jquery的ajax，而jquery又有自己的Promise实现。如果你理解了原理，就知道使用setTimeout和使用ajax是一样的意思。说起jquery，我不得不吐槽一句，jquery的Promise实现太过垃圾，各种语法糖把人都搞蒙了，我认为Promise之所以没有全面普及和jquery有很大的关系。后面我们会细讲jquery。&lt;/p&gt;
&lt;p&gt;关于Promise还有一些内容是需要讲的，限于篇幅，本文就只作ES6 Promise的讲解，接下来还会有大白话讲解系列：&lt;br&gt;Promise/A+规范&lt;br&gt;jquery中的Promise&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;ES6 Promise 先拉出来遛遛&lt;br&gt;复杂的概念先不讲，我们先简单粗暴地把Promise用一下，有个直观感受。那么第一个问题来了，Promise是什么玩意呢？是一个类？对象？数组？函数？&lt;/p&gt;
&lt;p&gt;别猜了，直接打印出来看看吧，console.dir(Promise
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>new Data(y,m,0)</title>
    <link href="http://yoursite.com/2016/12/20/newData/"/>
    <id>http://yoursite.com/2016/12/20/newData/</id>
    <published>2016-12-19T16:00:00.000Z</published>
    <updated>2016-12-20T09:40:11.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;获取相对值&quot;&gt;&lt;a href=&quot;#获取相对值&quot; class=&quot;headerlink&quot; title=&quot;获取相对值&quot;&gt;&lt;/a&gt;获取相对值&lt;/h2&gt;&lt;p&gt;var a = new Data(y,m,0);&lt;br&gt;获取 当月（m）1号前一天的日期；—-即上月最后一天的日期&lt;/p&gt;
&lt;p&gt;var a = new Data(y,m,-1);&lt;br&gt;获取 当月（m）1号前两天的日期；&lt;/p&gt;
&lt;p&gt;var a = new Data(y,m,1);&lt;br&gt;获取 当月（m）1号后一天的日期；&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;获取相对值&quot;&gt;&lt;a href=&quot;#获取相对值&quot; class=&quot;headerlink&quot; title=&quot;获取相对值&quot;&gt;&lt;/a&gt;获取相对值&lt;/h2&gt;&lt;p&gt;var a = new Data(y,m,0);&lt;br&gt;获取 当月（m）1号前一天的日期；—-即上月最后一天的日期&lt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>redis</title>
    <link href="http://yoursite.com/2016/12/08/redis2/"/>
    <id>http://yoursite.com/2016/12/08/redis2/</id>
    <published>2016-12-07T16:00:00.000Z</published>
    <updated>2016-12-08T04:32:41.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://redis.io/download&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网下载&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;p&gt;tar zxvf redis-2.8.9.tar.gz&lt;br&gt;cd redis-2.8.9&lt;/p&gt;
&lt;h3 id=&quot;make-编译&quot;&gt;&lt;a href=&quot;#make-编译&quot; class=&quot;headerlink&quot; title=&quot;make 编译&quot;&gt;&lt;/a&gt;make 编译&lt;/h3&gt;&lt;p&gt;make&lt;/p&gt;
&lt;h3 id=&quot;可使用root用户执行make-install，将可执行文件拷贝到-usr-local-bin目录下。这样就可以直接敲名字运行程序了。&quot;&gt;&lt;a href=&quot;#可使用root用户执行make-install，将可执行文件拷贝到-usr-local-bin目录下。这样就可以直接敲名字运行程序了。&quot; class=&quot;headerlink&quot; title=&quot;可使用root用户执行make install，将可执行文件拷贝到/usr/local/bin目录下。这样就可以直接敲名字运行程序了。&quot;&gt;&lt;/a&gt;可使用root用户执行&lt;code&gt;make install&lt;/code&gt;，将可执行文件拷贝到/usr/local/bin目录下。这样就可以直接敲名字运行程序了。&lt;/h3&gt;&lt;p&gt;make install&lt;/p&gt;
&lt;h2 id=&quot;启动&quot;&gt;&lt;a href=&quot;#启动&quot; class=&quot;headerlink&quot; title=&quot;启动&quot;&gt;&lt;/a&gt;启动&lt;/h2&gt;&lt;p&gt;#加上&lt;code&gt;&amp;amp;&lt;/code&gt;号使redis以后台程序方式运行&lt;br&gt;./redis-server &amp;amp;&lt;/p&gt;
&lt;h2 id=&quot;检测&quot;&gt;&lt;a href=&quot;#检测&quot; class=&quot;headerlink&quot; title=&quot;检测&quot;&gt;&lt;/a&gt;检测&lt;/h2&gt;&lt;h3 id=&quot;检测后台进程是否存在&quot;&gt;&lt;a href=&quot;#检测后台进程是否存在&quot; class=&quot;headerlink&quot; title=&quot;检测后台进程是否存在&quot;&gt;&lt;/a&gt;检测后台进程是否存在&lt;/h3&gt;&lt;p&gt;ps -ef |grep redis&lt;/p&gt;
&lt;h3 id=&quot;检测6379端口是否在监听&quot;&gt;&lt;a href=&quot;#检测6379端口是否在监听&quot; class=&quot;headerlink&quot; title=&quot;检测6379端口是否在监听&quot;&gt;&lt;/a&gt;检测6379端口是否在监听&lt;/h3&gt;&lt;p&gt;netstat -lntp | grep 6379&lt;/p&gt;
&lt;p&gt;###使用&lt;code&gt;redis-cli&lt;/code&gt;客户端检测连接是否正常&lt;br&gt;./redis-cli&lt;br&gt;127.0.0.1:6379&amp;gt; keys *&lt;br&gt;(empty list or set)&lt;br&gt;127.0.0.1:6379&amp;gt; set key “hello world”&lt;br&gt;OK&lt;br&gt;127.0.0.1:6379&amp;gt; get key&lt;br&gt;“hello world”&lt;br&gt;停止&lt;/p&gt;
&lt;h2 id=&quot;使用客户端&quot;&gt;&lt;a href=&quot;#使用客户端&quot; class=&quot;headerlink&quot; title=&quot;使用客户端&quot;&gt;&lt;/a&gt;使用客户端&lt;/h2&gt;&lt;p&gt;redis-cli shutdown&lt;/p&gt;
&lt;h4 id=&quot;因为Redis可以妥善处理SIGTERM信号，所以直接kill-9也是可以的&quot;&gt;&lt;a href=&quot;#因为Redis可以妥善处理SIGTERM信号，所以直接kill-9也是可以的&quot; class=&quot;headerlink&quot; title=&quot;因为Redis可以妥善处理SIGTERM信号，所以直接kill -9也是可以的&quot;&gt;&lt;/a&gt;因为Redis可以妥善处理SIGTERM信号，所以直接kill -9也是可以的&lt;/h4&gt;&lt;p&gt;kill -9 PID&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://redis.io/download&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网下
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>git 新建远程分支</title>
    <link href="http://yoursite.com/2016/12/02/git%20%E6%96%B0%E5%BB%BA%E8%BF%9C%E7%A8%8B%E5%88%86%E6%94%AF/"/>
    <id>http://yoursite.com/2016/12/02/git 新建远程分支/</id>
    <published>2016-12-01T16:00:00.000Z</published>
    <updated>2016-12-02T05:23:38.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;查看远程分支&quot;&gt;&lt;a href=&quot;#查看远程分支&quot; class=&quot;headerlink&quot; title=&quot;查看远程分支&quot;&gt;&lt;/a&gt;查看远程分支&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;git branch -a&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中带星号的为当前分支&lt;/p&gt;
&lt;h2 id=&quot;查看本地分支&quot;&gt;&lt;a href=&quot;#查看本地分支&quot; class=&quot;headerlink&quot; title=&quot;查看本地分支&quot;&gt;&lt;/a&gt;查看本地分支&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;git branch&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;创建分支（git-branch-《分支名称》-）&quot;&gt;&lt;a href=&quot;#创建分支（git-branch-《分支名称》-）&quot; class=&quot;headerlink&quot; title=&quot;创建分支（git branch 《分支名称》 ）&quot;&gt;&lt;/a&gt;创建分支（git branch 《分支名称》 ）&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;git branch &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;   &lt;span class=&quot;comment&quot;&gt;# 创建test分支&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;把本地分支推到远程分支&quot;&gt;&lt;a href=&quot;#把本地分支推到远程分支&quot; class=&quot;headerlink&quot; title=&quot;把本地分支推到远程分支&quot;&gt;&lt;/a&gt;把本地分支推到远程分支&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;git push origin &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;        &lt;span class=&quot;comment&quot;&gt;# 将test 分支推送到远程&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;切换分支到test&quot;&gt;&lt;a href=&quot;#切换分支到test&quot; class=&quot;headerlink&quot; title=&quot;切换分支到test&quot;&gt;&lt;/a&gt;切换分支到test&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;git checkout &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;删除本地分支test-Git-branch-d-test-或者-git-br-d-test&quot;&gt;&lt;a href=&quot;#删除本地分支test-Git-branch-d-test-或者-git-br-d-test&quot; class=&quot;headerlink&quot; title=&quot;删除本地分支test   Git branch -d test  或者 git br -d test&quot;&gt;&lt;/a&gt;删除本地分支test   Git branch -d test  或者 git br -d test&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;git br -d &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;删除前先切换至其他分支，才可以删除&lt;/p&gt;
&lt;h2 id=&quot;删除远程版本&quot;&gt;&lt;a href=&quot;#删除远程版本&quot; class=&quot;headerlink&quot; title=&quot;删除远程版本&quot;&gt;&lt;/a&gt;删除远程版本&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;git push origin :br-1.0.0&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;删除远程分支&quot;&gt;&lt;a href=&quot;#删除远程分支&quot; class=&quot;headerlink&quot; title=&quot;删除远程分支&quot;&gt;&lt;/a&gt;删除远程分支&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;git branch -r -d origin/branch-name  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;git push origin :branch-name&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;查看远程分支&quot;&gt;&lt;a href=&quot;#查看远程分支&quot; class=&quot;headerlink&quot; title=&quot;查看远程分支&quot;&gt;&lt;/a&gt;查看远程分支&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutt
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>hexo常用命令</title>
    <link href="http://yoursite.com/2016/11/30/hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2016/11/30/hexo常用命令/</id>
    <published>2016-11-29T16:00:00.000Z</published>
    <updated>2016-11-30T12:22:36.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;hexo-s&quot;&gt;&lt;a href=&quot;#hexo-s&quot; class=&quot;headerlink&quot; title=&quot;hexo s&quot;&gt;&lt;/a&gt;hexo s&lt;/h2&gt;&lt;p&gt;启动本地服务器，用于预览主题。默认地址： &lt;a href=&quot;http://localhost:4000/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:4000/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;1.hexo s 是 hexo server 的缩写，命令效果一致；&lt;br&gt;2.预览的同时可以修改文章内容或主题代码，保存后刷新页面即可；&lt;br&gt;3.对 Hexo 根目录 _config.yml 的修改，需要重启本地服务器后才能预览效果&lt;/p&gt;
&lt;h2 id=&quot;hexo-new-“文章名字”&quot;&gt;&lt;a href=&quot;#hexo-new-“文章名字”&quot; class=&quot;headerlink&quot; title=&quot;hexo new “文章名字”&quot;&gt;&lt;/a&gt;hexo new “文章名字”&lt;/h2&gt;&lt;p&gt;新建一篇标题为 xxx 的文章，因为标题里有空格，所以加上了引号。&lt;br&gt;文章标题可以在对应 md 文件里改，新建时标题可以写的简单些。&lt;/p&gt;
&lt;h2 id=&quot;hexo-new-page-aboutme&quot;&gt;&lt;a href=&quot;#hexo-new-page-aboutme&quot; class=&quot;headerlink&quot; title=&quot;hexo new page aboutme&quot;&gt;&lt;/a&gt;hexo new page aboutme&lt;/h2&gt;&lt;p&gt;新建一个标题为 aboutme 的页面，默认链接地址为 主页地址/aboutme/&lt;/p&gt;
&lt;p&gt;1.标题可以为中文，但一般习惯用英文；&lt;br&gt;2.页面标题和文章一样可以随意修改；&lt;br&gt;3.页面不会出现在首页文章列表和归档中，也不支持设置分类和标签。&lt;/p&gt;
&lt;h2 id=&quot;hexo-g&quot;&gt;&lt;a href=&quot;#hexo-g&quot; class=&quot;headerlink&quot; title=&quot;hexo g&quot;&gt;&lt;/a&gt;hexo g&lt;/h2&gt;&lt;p&gt;生成网站静态文件到默认设置的 public 文件夹。&lt;/p&gt;
&lt;p&gt;1.便于查看网站生成的静态文件或者手动部署网站；&lt;br&gt;2.如果使用自动部署，不需要先执行该命令；&lt;br&gt;3.hexo g 是 hexo generate 的缩写，命令效果一致。&lt;/p&gt;
&lt;h2 id=&quot;hexo-d&quot;&gt;&lt;a href=&quot;#hexo-d&quot; class=&quot;headerlink&quot; title=&quot;hexo d&quot;&gt;&lt;/a&gt;hexo d&lt;/h2&gt;&lt;p&gt;自动生成网站静态文件，并部署到设定的仓库。&lt;br&gt;1.hexo d 是 hexo deploy 的缩写，命令效果一致。&lt;/p&gt;
&lt;h2 id=&quot;hexo-clean&quot;&gt;&lt;a href=&quot;#hexo-clean&quot; class=&quot;headerlink&quot; title=&quot;hexo clean&quot;&gt;&lt;/a&gt;hexo clean&lt;/h2&gt;&lt;p&gt;清除缓存文件 db.json 和已生成的静态文件 public 。&lt;/p&gt;
&lt;p&gt;网站显示异常时可以执行这条命令试试。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;hexo-s&quot;&gt;&lt;a href=&quot;#hexo-s&quot; class=&quot;headerlink&quot; title=&quot;hexo s&quot;&gt;&lt;/a&gt;hexo s&lt;/h2&gt;&lt;p&gt;启动本地服务器，用于预览主题。默认地址： &lt;a href=&quot;http://localhost:4000/&quot; 
    
    </summary>
    
    
  </entry>
  
</feed>
